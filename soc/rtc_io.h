#include <stdlib.h>
#include <stdint.h>
#include "soc/gpio.h"
#include "soc/rtc_cntl.h"

#define DR_REG_RTCIO_BASE                       0x60008400
#define RTCIO_GPIO36_CHANNEL        0   //RTCIO_CHANNEL_0
#define RTCIO_CHANNEL_0_GPIO_NUM    36

#define RTCIO_GPIO37_CHANNEL        1   //RTCIO_CHANNEL_1
#define RTCIO_CHANNEL_1_GPIO_NUM    37

#define RTCIO_GPIO38_CHANNEL        2   //RTCIO_CHANNEL_2
#define RTCIO_CHANNEL_2_GPIO_NUM    38

#define RTCIO_GPIO39_CHANNEL        3   //RTCIO_CHANNEL_3
#define RTCIO_CHANNEL_3_GPIO_NUM    39

#define RTCIO_GPIO34_CHANNEL        4   //RTCIO_CHANNEL_4
#define RTCIO_CHANNEL_4_GPIO_NUM    34

#define RTCIO_GPIO35_CHANNEL        5   //RTCIO_CHANNEL_5
#define RTCIO_CHANNEL_5_GPIO_NUM    35

#define RTCIO_GPIO25_CHANNEL        6   //RTCIO_CHANNEL_6
#define RTCIO_CHANNEL_6_GPIO_NUM    25

#define RTCIO_GPIO26_CHANNEL        7   //RTCIO_CHANNEL_7
#define RTCIO_CHANNEL_7_GPIO_NUM    26

#define RTCIO_GPIO33_CHANNEL        8   //RTCIO_CHANNEL_8
#define RTCIO_CHANNEL_8_GPIO_NUM    33

#define RTCIO_GPIO32_CHANNEL        9   //RTCIO_CHANNEL_9
#define RTCIO_CHANNEL_9_GPIO_NUM    32

#define RTCIO_GPIO4_CHANNEL         10   //RTCIO_CHANNEL_10
#define RTCIO_CHANNEL_10_GPIO_NUM   4

#define RTCIO_GPIO0_CHANNEL         11   //RTCIO_CHANNEL_11
#define RTCIO_CHANNEL_11_GPIO_NUM   0

#define RTCIO_GPIO2_CHANNEL         12   //RTCIO_CHANNEL_12
#define RTCIO_CHANNEL_12_GPIO_NUM   2

#define RTCIO_GPIO15_CHANNEL        13   //RTCIO_CHANNEL_13
#define RTCIO_CHANNEL_13_GPIO_NUM   15

#define RTCIO_GPIO13_CHANNEL        14   //RTCIO_CHANNEL_14
#define RTCIO_CHANNEL_14_GPIO_NUM   13

#define RTCIO_GPIO12_CHANNEL        15   //RTCIO_CHANNEL_15
#define RTCIO_CHANNEL_15_GPIO_NUM   12

#define RTCIO_GPIO14_CHANNEL        16   //RTCIO_CHANNEL_16
#define RTCIO_CHANNEL_16_GPIO_NUM   14

#define RTCIO_GPIO27_CHANNEL        17   //RTCIO_CHANNEL_17
#define RTCIO_CHANNEL_17_GPIO_NUM   27

#define RTCIO_GPIO18_CHANNEL        18   //RTCIO_CHANNEL_18
#define RTCIO_CHANNEL_18_GPIO_NUM   18

#define RTCIO_GPIO19_CHANNEL        19   //RTCIO_CHANNEL_19
#define RTCIO_CHANNEL_19_GPIO_NUM   19

#define RTCIO_GPIO20_CHANNEL        20   //RTCIO_CHANNEL_20
#define RTCIO_CHANNEL_20_GPIO_NUM   20

#define RTCIO_GPIO21_CHANNEL        21   //RTCIO_CHANNEL_21
#define RTCIO_CHANNEL_21_GPIO_NUM   21



#define RTC_GPIO_OUT_REG          (DR_REG_RTCIO_BASE + 0x0)
#define RTC_GPIO_OUT_DATA    0x003FFFFF
#define RTC_GPIO_OUT_DATA_M  ((RTC_GPIO_OUT_DATA_V)<<(RTC_GPIO_OUT_DATA_S))
#define RTC_GPIO_OUT_DATA_V  0x3FFFFF
#define RTC_GPIO_OUT_DATA_S  10

#define RTC_GPIO_OUT_W1TS_REG          (DR_REG_RTCIO_BASE + 0x4)
#define RTC_GPIO_OUT_DATA_W1TS    0x003FFFFF
#define RTC_GPIO_OUT_DATA_W1TS_M  ((RTC_GPIO_OUT_DATA_W1TS_V)<<(RTC_GPIO_OUT_DATA_W1TS_S))
#define RTC_GPIO_OUT_DATA_W1TS_V  0x3FFFFF
#define RTC_GPIO_OUT_DATA_W1TS_S  10

#define RTC_GPIO_OUT_W1TC_REG          (DR_REG_RTCIO_BASE + 0x8)
#define RTC_GPIO_OUT_DATA_W1TC    0x003FFFFF
#define RTC_GPIO_OUT_DATA_W1TC_M  ((RTC_GPIO_OUT_DATA_W1TC_V)<<(RTC_GPIO_OUT_DATA_W1TC_S))
#define RTC_GPIO_OUT_DATA_W1TC_V  0x3FFFFF
#define RTC_GPIO_OUT_DATA_W1TC_S  10

#define RTC_GPIO_ENABLE_REG          (DR_REG_RTCIO_BASE + 0xC)
#define RTC_GPIO_ENABLE    0x003FFFFF
#define RTC_GPIO_ENABLE_M  ((RTC_GPIO_ENABLE_V)<<(RTC_GPIO_ENABLE_S))
#define RTC_GPIO_ENABLE_V  0x3FFFFF
#define RTC_GPIO_ENABLE_S  10

#define RTC_GPIO_ENABLE_W1TS_REG          (DR_REG_RTCIO_BASE + 0x10)
#define RTC_GPIO_ENABLE_W1TS    0x003FFFFF
#define RTC_GPIO_ENABLE_W1TS_M  ((RTC_GPIO_ENABLE_W1TS_V)<<(RTC_GPIO_ENABLE_W1TS_S))
#define RTC_GPIO_ENABLE_W1TS_V  0x3FFFFF
#define RTC_GPIO_ENABLE_W1TS_S  10

#define RTC_GPIO_ENABLE_W1TC_REG          (DR_REG_RTCIO_BASE + 0x14)
#define RTC_GPIO_ENABLE_W1TC    0x003FFFFF
#define RTC_GPIO_ENABLE_W1TC_M  ((RTC_GPIO_ENABLE_W1TC_V)<<(RTC_GPIO_ENABLE_W1TC_S))
#define RTC_GPIO_ENABLE_W1TC_V  0x3FFFFF
#define RTC_GPIO_ENABLE_W1TC_S  10

#define RTC_GPIO_STATUS_REG          (DR_REG_RTCIO_BASE + 0x18)
#define RTC_GPIO_STATUS_INT    0x003FFFFF
#define RTC_GPIO_STATUS_INT_M  ((RTC_GPIO_STATUS_INT_V)<<(RTC_GPIO_STATUS_INT_S))
#define RTC_GPIO_STATUS_INT_V  0x3FFFFF
#define RTC_GPIO_STATUS_INT_S  10

#define RTC_GPIO_STATUS_W1TS_REG          (DR_REG_RTCIO_BASE + 0x1C)
#define RTC_GPIO_STATUS_INT_W1TS    0x003FFFFF
#define RTC_GPIO_STATUS_INT_W1TS_M  ((RTC_GPIO_STATUS_INT_W1TS_V)<<(RTC_GPIO_STATUS_INT_W1TS_S))
#define RTC_GPIO_STATUS_INT_W1TS_V  0x3FFFFF
#define RTC_GPIO_STATUS_INT_W1TS_S  10

#define RTC_GPIO_STATUS_W1TC_REG          (DR_REG_RTCIO_BASE + 0x20)
#define RTC_GPIO_STATUS_INT_W1TC    0x003FFFFF
#define RTC_GPIO_STATUS_INT_W1TC_M  ((RTC_GPIO_STATUS_INT_W1TC_V)<<(RTC_GPIO_STATUS_INT_W1TC_S))
#define RTC_GPIO_STATUS_INT_W1TC_V  0x3FFFFF
#define RTC_GPIO_STATUS_INT_W1TC_S  10

#define RTC_GPIO_IN_REG          (DR_REG_RTCIO_BASE + 0x24)
#define RTC_GPIO_IN_NEXT    0x003FFFFF
#define RTC_GPIO_IN_NEXT_M  ((RTC_GPIO_IN_NEXT_V)<<(RTC_GPIO_IN_NEXT_S))
#define RTC_GPIO_IN_NEXT_V  0x3FFFFF
#define RTC_GPIO_IN_NEXT_S  10

#define RTC_GPIO_PIN0_REG          (DR_REG_RTCIO_BASE + 0x28)
#define RTC_GPIO_PIN0_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN0_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN0_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN0_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN0_INT_TYPE    0x00000007
#define RTC_GPIO_PIN0_INT_TYPE_M  ((RTC_GPIO_PIN0_INT_TYPE_V)<<(RTC_GPIO_PIN0_INT_TYPE_S))
#define RTC_GPIO_PIN0_INT_TYPE_V  0x7
#define RTC_GPIO_PIN0_INT_TYPE_S  7
#define RTC_GPIO_PIN0_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN0_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN0_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN0_PAD_DRIVER_S  2

#define RTC_GPIO_PIN1_REG          (DR_REG_RTCIO_BASE + 0x2C)
#define RTC_GPIO_PIN1_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN1_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN1_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN1_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN1_INT_TYPE    0x00000007
#define RTC_GPIO_PIN1_INT_TYPE_M  ((RTC_GPIO_PIN1_INT_TYPE_V)<<(RTC_GPIO_PIN1_INT_TYPE_S))
#define RTC_GPIO_PIN1_INT_TYPE_V  0x7
#define RTC_GPIO_PIN1_INT_TYPE_S  7
#define RTC_GPIO_PIN1_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN1_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN1_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN1_PAD_DRIVER_S  2

#define RTC_GPIO_PIN2_REG          (DR_REG_RTCIO_BASE + 0x30)
#define RTC_GPIO_PIN2_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN2_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN2_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN2_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN2_INT_TYPE    0x00000007
#define RTC_GPIO_PIN2_INT_TYPE_M  ((RTC_GPIO_PIN2_INT_TYPE_V)<<(RTC_GPIO_PIN2_INT_TYPE_S))
#define RTC_GPIO_PIN2_INT_TYPE_V  0x7
#define RTC_GPIO_PIN2_INT_TYPE_S  7
#define RTC_GPIO_PIN2_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN2_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN2_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN2_PAD_DRIVER_S  2

#define RTC_GPIO_PIN3_REG          (DR_REG_RTCIO_BASE + 0x34)
#define RTC_GPIO_PIN3_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN3_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN3_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN3_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN3_INT_TYPE    0x00000007
#define RTC_GPIO_PIN3_INT_TYPE_M  ((RTC_GPIO_PIN3_INT_TYPE_V)<<(RTC_GPIO_PIN3_INT_TYPE_S))
#define RTC_GPIO_PIN3_INT_TYPE_V  0x7
#define RTC_GPIO_PIN3_INT_TYPE_S  7
#define RTC_GPIO_PIN3_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN3_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN3_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN3_PAD_DRIVER_S  2

#define RTC_GPIO_PIN4_REG          (DR_REG_RTCIO_BASE + 0x38)
#define RTC_GPIO_PIN4_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN4_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN4_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN4_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN4_INT_TYPE    0x00000007
#define RTC_GPIO_PIN4_INT_TYPE_M  ((RTC_GPIO_PIN4_INT_TYPE_V)<<(RTC_GPIO_PIN4_INT_TYPE_S))
#define RTC_GPIO_PIN4_INT_TYPE_V  0x7
#define RTC_GPIO_PIN4_INT_TYPE_S  7
#define RTC_GPIO_PIN4_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN4_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN4_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN4_PAD_DRIVER_S  2

#define RTC_GPIO_PIN5_REG          (DR_REG_RTCIO_BASE + 0x3C)
#define RTC_GPIO_PIN5_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN5_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN5_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN5_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN5_INT_TYPE    0x00000007
#define RTC_GPIO_PIN5_INT_TYPE_M  ((RTC_GPIO_PIN5_INT_TYPE_V)<<(RTC_GPIO_PIN5_INT_TYPE_S))
#define RTC_GPIO_PIN5_INT_TYPE_V  0x7
#define RTC_GPIO_PIN5_INT_TYPE_S  7
#define RTC_GPIO_PIN5_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN5_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN5_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN5_PAD_DRIVER_S  2

#define RTC_GPIO_PIN6_REG          (DR_REG_RTCIO_BASE + 0x40)
#define RTC_GPIO_PIN6_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN6_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN6_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN6_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN6_INT_TYPE    0x00000007
#define RTC_GPIO_PIN6_INT_TYPE_M  ((RTC_GPIO_PIN6_INT_TYPE_V)<<(RTC_GPIO_PIN6_INT_TYPE_S))
#define RTC_GPIO_PIN6_INT_TYPE_V  0x7
#define RTC_GPIO_PIN6_INT_TYPE_S  7
#define RTC_GPIO_PIN6_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN6_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN6_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN6_PAD_DRIVER_S  2

#define RTC_GPIO_PIN7_REG          (DR_REG_RTCIO_BASE + 0x44)
#define RTC_GPIO_PIN7_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN7_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN7_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN7_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN7_INT_TYPE    0x00000007
#define RTC_GPIO_PIN7_INT_TYPE_M  ((RTC_GPIO_PIN7_INT_TYPE_V)<<(RTC_GPIO_PIN7_INT_TYPE_S))
#define RTC_GPIO_PIN7_INT_TYPE_V  0x7
#define RTC_GPIO_PIN7_INT_TYPE_S  7
#define RTC_GPIO_PIN7_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN7_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN7_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN7_PAD_DRIVER_S  2

#define RTC_GPIO_PIN8_REG          (DR_REG_RTCIO_BASE + 0x48)
#define RTC_GPIO_PIN8_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN8_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN8_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN8_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN8_INT_TYPE    0x00000007
#define RTC_GPIO_PIN8_INT_TYPE_M  ((RTC_GPIO_PIN8_INT_TYPE_V)<<(RTC_GPIO_PIN8_INT_TYPE_S))
#define RTC_GPIO_PIN8_INT_TYPE_V  0x7
#define RTC_GPIO_PIN8_INT_TYPE_S  7
#define RTC_GPIO_PIN8_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN8_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN8_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN8_PAD_DRIVER_S  2

#define RTC_GPIO_PIN9_REG          (DR_REG_RTCIO_BASE + 0x4C)
#define RTC_GPIO_PIN9_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN9_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN9_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN9_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN9_INT_TYPE    0x00000007
#define RTC_GPIO_PIN9_INT_TYPE_M  ((RTC_GPIO_PIN9_INT_TYPE_V)<<(RTC_GPIO_PIN9_INT_TYPE_S))
#define RTC_GPIO_PIN9_INT_TYPE_V  0x7
#define RTC_GPIO_PIN9_INT_TYPE_S  7
#define RTC_GPIO_PIN9_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN9_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN9_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN9_PAD_DRIVER_S  2

#define RTC_GPIO_PIN10_REG          (DR_REG_RTCIO_BASE + 0x50)
#define RTC_GPIO_PIN10_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN10_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN10_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN10_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN10_INT_TYPE    0x00000007
#define RTC_GPIO_PIN10_INT_TYPE_M  ((RTC_GPIO_PIN10_INT_TYPE_V)<<(RTC_GPIO_PIN10_INT_TYPE_S))
#define RTC_GPIO_PIN10_INT_TYPE_V  0x7
#define RTC_GPIO_PIN10_INT_TYPE_S  7
#define RTC_GPIO_PIN10_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN10_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN10_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN10_PAD_DRIVER_S  2

#define RTC_GPIO_PIN11_REG          (DR_REG_RTCIO_BASE + 0x54)
#define RTC_GPIO_PIN11_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN11_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN11_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN11_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN11_INT_TYPE    0x00000007
#define RTC_GPIO_PIN11_INT_TYPE_M  ((RTC_GPIO_PIN11_INT_TYPE_V)<<(RTC_GPIO_PIN11_INT_TYPE_S))
#define RTC_GPIO_PIN11_INT_TYPE_V  0x7
#define RTC_GPIO_PIN11_INT_TYPE_S  7
#define RTC_GPIO_PIN11_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN11_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN11_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN11_PAD_DRIVER_S  2

#define RTC_GPIO_PIN12_REG          (DR_REG_RTCIO_BASE + 0x58)
#define RTC_GPIO_PIN12_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN12_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN12_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN12_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN12_INT_TYPE    0x00000007
#define RTC_GPIO_PIN12_INT_TYPE_M  ((RTC_GPIO_PIN12_INT_TYPE_V)<<(RTC_GPIO_PIN12_INT_TYPE_S))
#define RTC_GPIO_PIN12_INT_TYPE_V  0x7
#define RTC_GPIO_PIN12_INT_TYPE_S  7
#define RTC_GPIO_PIN12_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN12_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN12_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN12_PAD_DRIVER_S  2

#define RTC_GPIO_PIN13_REG          (DR_REG_RTCIO_BASE + 0x5C)
#define RTC_GPIO_PIN13_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN13_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN13_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN13_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN13_INT_TYPE    0x00000007
#define RTC_GPIO_PIN13_INT_TYPE_M  ((RTC_GPIO_PIN13_INT_TYPE_V)<<(RTC_GPIO_PIN13_INT_TYPE_S))
#define RTC_GPIO_PIN13_INT_TYPE_V  0x7
#define RTC_GPIO_PIN13_INT_TYPE_S  7
#define RTC_GPIO_PIN13_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN13_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN13_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN13_PAD_DRIVER_S  2

#define RTC_GPIO_PIN14_REG          (DR_REG_RTCIO_BASE + 0x60)
#define RTC_GPIO_PIN14_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN14_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN14_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN14_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN14_INT_TYPE    0x00000007
#define RTC_GPIO_PIN14_INT_TYPE_M  ((RTC_GPIO_PIN14_INT_TYPE_V)<<(RTC_GPIO_PIN14_INT_TYPE_S))
#define RTC_GPIO_PIN14_INT_TYPE_V  0x7
#define RTC_GPIO_PIN14_INT_TYPE_S  7
#define RTC_GPIO_PIN14_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN14_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN14_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN14_PAD_DRIVER_S  2

#define RTC_GPIO_PIN15_REG          (DR_REG_RTCIO_BASE + 0x64)
#define RTC_GPIO_PIN15_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN15_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN15_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN15_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN15_INT_TYPE    0x00000007
#define RTC_GPIO_PIN15_INT_TYPE_M  ((RTC_GPIO_PIN15_INT_TYPE_V)<<(RTC_GPIO_PIN15_INT_TYPE_S))
#define RTC_GPIO_PIN15_INT_TYPE_V  0x7
#define RTC_GPIO_PIN15_INT_TYPE_S  7
#define RTC_GPIO_PIN15_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN15_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN15_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN15_PAD_DRIVER_S  2

#define RTC_GPIO_PIN16_REG          (DR_REG_RTCIO_BASE + 0x68)
#define RTC_GPIO_PIN16_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN16_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN16_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN16_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN16_INT_TYPE    0x00000007
#define RTC_GPIO_PIN16_INT_TYPE_M  ((RTC_GPIO_PIN16_INT_TYPE_V)<<(RTC_GPIO_PIN16_INT_TYPE_S))
#define RTC_GPIO_PIN16_INT_TYPE_V  0x7
#define RTC_GPIO_PIN16_INT_TYPE_S  7
#define RTC_GPIO_PIN16_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN16_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN16_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN16_PAD_DRIVER_S  2

#define RTC_GPIO_PIN17_REG          (DR_REG_RTCIO_BASE + 0x6C)
#define RTC_GPIO_PIN17_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN17_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN17_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN17_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN17_INT_TYPE    0x00000007
#define RTC_GPIO_PIN17_INT_TYPE_M  ((RTC_GPIO_PIN17_INT_TYPE_V)<<(RTC_GPIO_PIN17_INT_TYPE_S))
#define RTC_GPIO_PIN17_INT_TYPE_V  0x7
#define RTC_GPIO_PIN17_INT_TYPE_S  7
#define RTC_GPIO_PIN17_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN17_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN17_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN17_PAD_DRIVER_S  2

#define RTC_GPIO_PIN18_REG          (DR_REG_RTCIO_BASE + 0x70)
#define RTC_GPIO_PIN18_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN18_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN18_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN18_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN18_INT_TYPE    0x00000007
#define RTC_GPIO_PIN18_INT_TYPE_M  ((RTC_GPIO_PIN18_INT_TYPE_V)<<(RTC_GPIO_PIN18_INT_TYPE_S))
#define RTC_GPIO_PIN18_INT_TYPE_V  0x7
#define RTC_GPIO_PIN18_INT_TYPE_S  7
#define RTC_GPIO_PIN18_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN18_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN18_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN18_PAD_DRIVER_S  2

#define RTC_GPIO_PIN19_REG          (DR_REG_RTCIO_BASE + 0x74)
#define RTC_GPIO_PIN19_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN19_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN19_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN19_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN19_INT_TYPE    0x00000007
#define RTC_GPIO_PIN19_INT_TYPE_M  ((RTC_GPIO_PIN19_INT_TYPE_V)<<(RTC_GPIO_PIN19_INT_TYPE_S))
#define RTC_GPIO_PIN19_INT_TYPE_V  0x7
#define RTC_GPIO_PIN19_INT_TYPE_S  7
#define RTC_GPIO_PIN19_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN19_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN19_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN19_PAD_DRIVER_S  2

#define RTC_GPIO_PIN20_REG          (DR_REG_RTCIO_BASE + 0x78)
#define RTC_GPIO_PIN20_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN20_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN20_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN20_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN20_INT_TYPE    0x00000007
#define RTC_GPIO_PIN20_INT_TYPE_M  ((RTC_GPIO_PIN20_INT_TYPE_V)<<(RTC_GPIO_PIN20_INT_TYPE_S))
#define RTC_GPIO_PIN20_INT_TYPE_V  0x7
#define RTC_GPIO_PIN20_INT_TYPE_S  7
#define RTC_GPIO_PIN20_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN20_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN20_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN20_PAD_DRIVER_S  2

#define RTC_GPIO_PIN21_REG          (DR_REG_RTCIO_BASE + 0x7C)
#define RTC_GPIO_PIN21_WAKEUP_ENABLE    (1<<(10))
#define RTC_GPIO_PIN21_WAKEUP_ENABLE_M  (1<<(10))
#define RTC_GPIO_PIN21_WAKEUP_ENABLE_V  0x1
#define RTC_GPIO_PIN21_WAKEUP_ENABLE_S  10
#define RTC_GPIO_PIN21_INT_TYPE    0x00000007
#define RTC_GPIO_PIN21_INT_TYPE_M  ((RTC_GPIO_PIN21_INT_TYPE_V)<<(RTC_GPIO_PIN21_INT_TYPE_S))
#define RTC_GPIO_PIN21_INT_TYPE_V  0x7
#define RTC_GPIO_PIN21_INT_TYPE_S  7
#define RTC_GPIO_PIN21_PAD_DRIVER    (1<<(2))
#define RTC_GPIO_PIN21_PAD_DRIVER_M  (1<<(2))
#define RTC_GPIO_PIN21_PAD_DRIVER_V  0x1
#define RTC_GPIO_PIN21_PAD_DRIVER_S  2

#define RTC_IO_RTC_DEBUG_SEL_REG          (DR_REG_RTCIO_BASE + 0x80)
#define RTC_IO_DEBUG_12M_NO_GATING    (1<<(25))
#define RTC_IO_DEBUG_12M_NO_GATING_M  (1<<(25))
#define RTC_IO_DEBUG_12M_NO_GATING_V  0x1
#define RTC_IO_DEBUG_12M_NO_GATING_S  25
#define RTC_IO_DEBUG_SEL4    0x0000001F
#define RTC_IO_DEBUG_SEL4_M  ((RTC_IO_DEBUG_SEL4_V)<<(RTC_IO_DEBUG_SEL4_S))
#define RTC_IO_DEBUG_SEL4_V  0x1F
#define RTC_IO_DEBUG_SEL4_S  20
#define RTC_IO_DEBUG_SEL3    0x0000001F
#define RTC_IO_DEBUG_SEL3_M  ((RTC_IO_DEBUG_SEL3_V)<<(RTC_IO_DEBUG_SEL3_S))
#define RTC_IO_DEBUG_SEL3_V  0x1F
#define RTC_IO_DEBUG_SEL3_S  15
#define RTC_IO_DEBUG_SEL2    0x0000001F
#define RTC_IO_DEBUG_SEL2_M  ((RTC_IO_DEBUG_SEL2_V)<<(RTC_IO_DEBUG_SEL2_S))
#define RTC_IO_DEBUG_SEL2_V  0x1F
#define RTC_IO_DEBUG_SEL2_S  10
#define RTC_IO_DEBUG_SEL1    0x0000001F
#define RTC_IO_DEBUG_SEL1_M  ((RTC_IO_DEBUG_SEL1_V)<<(RTC_IO_DEBUG_SEL1_S))
#define RTC_IO_DEBUG_SEL1_V  0x1F
#define RTC_IO_DEBUG_SEL1_S  5
#define RTC_IO_DEBUG_SEL0    0x0000001F
#define RTC_IO_DEBUG_SEL0_M  ((RTC_IO_DEBUG_SEL0_V)<<(RTC_IO_DEBUG_SEL0_S))
#define RTC_IO_DEBUG_SEL0_V  0x1F
#define RTC_IO_DEBUG_SEL0_S  0

#define RTC_IO_TOUCH_PAD0_REG          (DR_REG_RTCIO_BASE + 0x84)
#define RTC_IO_TOUCH_PAD0_DRV    0x00000003
#define RTC_IO_TOUCH_PAD0_DRV_M  ((RTC_IO_TOUCH_PAD0_DRV_V)<<(RTC_IO_TOUCH_PAD0_DRV_S))
#define RTC_IO_TOUCH_PAD0_DRV_V  0x3
#define RTC_IO_TOUCH_PAD0_DRV_S  29
#define RTC_IO_TOUCH_PAD0_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD0_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD0_RDE_V  0x1
#define RTC_IO_TOUCH_PAD0_RDE_S  28
#define RTC_IO_TOUCH_PAD0_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD0_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD0_RUE_V  0x1
#define RTC_IO_TOUCH_PAD0_RUE_S  27
#define RTC_IO_TOUCH_PAD0_START    (1<<(22))
#define RTC_IO_TOUCH_PAD0_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD0_START_V  0x1
#define RTC_IO_TOUCH_PAD0_START_S  22
#define RTC_IO_TOUCH_PAD0_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD0_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD0_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD0_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD0_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD0_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD0_XPD_V  0x1
#define RTC_IO_TOUCH_PAD0_XPD_S  20
#define RTC_IO_TOUCH_PAD0_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD0_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD0_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD0_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD0_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD0_FUN_SEL_M  ((RTC_IO_TOUCH_PAD0_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD0_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD0_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD0_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD0_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD0_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD0_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD0_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD0_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD0_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD0_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD0_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD0_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD0_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD0_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD0_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD0_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD0_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD0_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD0_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD1_REG          (DR_REG_RTCIO_BASE + 0x88)
#define RTC_IO_TOUCH_PAD1_DRV    0x00000003
#define RTC_IO_TOUCH_PAD1_DRV_M  ((RTC_IO_TOUCH_PAD1_DRV_V)<<(RTC_IO_TOUCH_PAD1_DRV_S))
#define RTC_IO_TOUCH_PAD1_DRV_V  0x3
#define RTC_IO_TOUCH_PAD1_DRV_S  29
#define RTC_IO_TOUCH_PAD1_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD1_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD1_RDE_V  0x1
#define RTC_IO_TOUCH_PAD1_RDE_S  28
#define RTC_IO_TOUCH_PAD1_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD1_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD1_RUE_V  0x1
#define RTC_IO_TOUCH_PAD1_RUE_S  27
#define RTC_IO_TOUCH_PAD1_START    (1<<(22))
#define RTC_IO_TOUCH_PAD1_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD1_START_V  0x1
#define RTC_IO_TOUCH_PAD1_START_S  22
#define RTC_IO_TOUCH_PAD1_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD1_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD1_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD1_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD1_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD1_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD1_XPD_V  0x1
#define RTC_IO_TOUCH_PAD1_XPD_S  20
#define RTC_IO_TOUCH_PAD1_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD1_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD1_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD1_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD1_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD1_FUN_SEL_M  ((RTC_IO_TOUCH_PAD1_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD1_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD1_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD1_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD1_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD1_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD1_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD1_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD1_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD1_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD1_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD1_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD1_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD1_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD1_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD1_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD1_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD1_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD1_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD1_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD2_REG          (DR_REG_RTCIO_BASE + 0x8C)
#define RTC_IO_TOUCH_PAD2_DRV    0x00000003
#define RTC_IO_TOUCH_PAD2_DRV_M  ((RTC_IO_TOUCH_PAD2_DRV_V)<<(RTC_IO_TOUCH_PAD2_DRV_S))
#define RTC_IO_TOUCH_PAD2_DRV_V  0x3
#define RTC_IO_TOUCH_PAD2_DRV_S  29
#define RTC_IO_TOUCH_PAD2_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD2_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD2_RDE_V  0x1
#define RTC_IO_TOUCH_PAD2_RDE_S  28
#define RTC_IO_TOUCH_PAD2_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD2_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD2_RUE_V  0x1
#define RTC_IO_TOUCH_PAD2_RUE_S  27
#define RTC_IO_TOUCH_PAD2_START    (1<<(22))
#define RTC_IO_TOUCH_PAD2_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD2_START_V  0x1
#define RTC_IO_TOUCH_PAD2_START_S  22
#define RTC_IO_TOUCH_PAD2_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD2_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD2_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD2_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD2_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD2_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD2_XPD_V  0x1
#define RTC_IO_TOUCH_PAD2_XPD_S  20
#define RTC_IO_TOUCH_PAD2_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD2_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD2_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD2_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD2_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD2_FUN_SEL_M  ((RTC_IO_TOUCH_PAD2_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD2_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD2_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD2_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD2_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD2_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD2_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD2_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD2_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD2_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD2_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD2_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD2_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD2_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD2_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD2_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD2_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD2_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD2_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD2_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD3_REG          (DR_REG_RTCIO_BASE + 0x90)
#define RTC_IO_TOUCH_PAD3_DRV    0x00000003
#define RTC_IO_TOUCH_PAD3_DRV_M  ((RTC_IO_TOUCH_PAD3_DRV_V)<<(RTC_IO_TOUCH_PAD3_DRV_S))
#define RTC_IO_TOUCH_PAD3_DRV_V  0x3
#define RTC_IO_TOUCH_PAD3_DRV_S  29
#define RTC_IO_TOUCH_PAD3_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD3_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD3_RDE_V  0x1
#define RTC_IO_TOUCH_PAD3_RDE_S  28
#define RTC_IO_TOUCH_PAD3_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD3_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD3_RUE_V  0x1
#define RTC_IO_TOUCH_PAD3_RUE_S  27
#define RTC_IO_TOUCH_PAD3_START    (1<<(22))
#define RTC_IO_TOUCH_PAD3_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD3_START_V  0x1
#define RTC_IO_TOUCH_PAD3_START_S  22
#define RTC_IO_TOUCH_PAD3_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD3_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD3_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD3_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD3_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD3_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD3_XPD_V  0x1
#define RTC_IO_TOUCH_PAD3_XPD_S  20
#define RTC_IO_TOUCH_PAD3_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD3_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD3_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD3_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD3_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD3_FUN_SEL_M  ((RTC_IO_TOUCH_PAD3_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD3_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD3_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD3_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD3_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD3_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD3_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD3_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD3_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD3_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD3_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD3_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD3_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD3_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD3_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD3_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD3_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD3_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD3_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD3_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD4_REG          (DR_REG_RTCIO_BASE + 0x94)
#define RTC_IO_TOUCH_PAD4_DRV    0x00000003
#define RTC_IO_TOUCH_PAD4_DRV_M  ((RTC_IO_TOUCH_PAD4_DRV_V)<<(RTC_IO_TOUCH_PAD4_DRV_S))
#define RTC_IO_TOUCH_PAD4_DRV_V  0x3
#define RTC_IO_TOUCH_PAD4_DRV_S  29
#define RTC_IO_TOUCH_PAD4_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD4_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD4_RDE_V  0x1
#define RTC_IO_TOUCH_PAD4_RDE_S  28
#define RTC_IO_TOUCH_PAD4_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD4_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD4_RUE_V  0x1
#define RTC_IO_TOUCH_PAD4_RUE_S  27
#define RTC_IO_TOUCH_PAD4_START    (1<<(22))
#define RTC_IO_TOUCH_PAD4_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD4_START_V  0x1
#define RTC_IO_TOUCH_PAD4_START_S  22
#define RTC_IO_TOUCH_PAD4_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD4_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD4_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD4_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD4_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD4_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD4_XPD_V  0x1
#define RTC_IO_TOUCH_PAD4_XPD_S  20
#define RTC_IO_TOUCH_PAD4_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD4_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD4_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD4_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD4_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD4_FUN_SEL_M  ((RTC_IO_TOUCH_PAD4_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD4_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD4_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD4_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD4_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD4_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD4_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD4_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD4_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD4_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD4_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD4_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD4_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD4_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD4_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD4_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD4_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD4_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD4_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD4_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD5_REG          (DR_REG_RTCIO_BASE + 0x98)
#define RTC_IO_TOUCH_PAD5_DRV    0x00000003
#define RTC_IO_TOUCH_PAD5_DRV_M  ((RTC_IO_TOUCH_PAD5_DRV_V)<<(RTC_IO_TOUCH_PAD5_DRV_S))
#define RTC_IO_TOUCH_PAD5_DRV_V  0x3
#define RTC_IO_TOUCH_PAD5_DRV_S  29
#define RTC_IO_TOUCH_PAD5_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD5_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD5_RDE_V  0x1
#define RTC_IO_TOUCH_PAD5_RDE_S  28
#define RTC_IO_TOUCH_PAD5_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD5_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD5_RUE_V  0x1
#define RTC_IO_TOUCH_PAD5_RUE_S  27
#define RTC_IO_TOUCH_PAD5_START    (1<<(22))
#define RTC_IO_TOUCH_PAD5_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD5_START_V  0x1
#define RTC_IO_TOUCH_PAD5_START_S  22
#define RTC_IO_TOUCH_PAD5_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD5_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD5_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD5_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD5_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD5_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD5_XPD_V  0x1
#define RTC_IO_TOUCH_PAD5_XPD_S  20
#define RTC_IO_TOUCH_PAD5_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD5_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD5_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD5_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD5_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD5_FUN_SEL_M  ((RTC_IO_TOUCH_PAD5_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD5_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD5_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD5_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD5_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD5_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD5_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD5_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD5_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD5_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD5_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD5_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD5_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD5_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD5_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD5_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD5_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD5_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD5_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD5_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD6_REG          (DR_REG_RTCIO_BASE + 0x9C)
#define RTC_IO_TOUCH_PAD6_DRV    0x00000003
#define RTC_IO_TOUCH_PAD6_DRV_M  ((RTC_IO_TOUCH_PAD6_DRV_V)<<(RTC_IO_TOUCH_PAD6_DRV_S))
#define RTC_IO_TOUCH_PAD6_DRV_V  0x3
#define RTC_IO_TOUCH_PAD6_DRV_S  29
#define RTC_IO_TOUCH_PAD6_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD6_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD6_RDE_V  0x1
#define RTC_IO_TOUCH_PAD6_RDE_S  28
#define RTC_IO_TOUCH_PAD6_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD6_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD6_RUE_V  0x1
#define RTC_IO_TOUCH_PAD6_RUE_S  27
#define RTC_IO_TOUCH_PAD6_START    (1<<(22))
#define RTC_IO_TOUCH_PAD6_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD6_START_V  0x1
#define RTC_IO_TOUCH_PAD6_START_S  22
#define RTC_IO_TOUCH_PAD6_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD6_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD6_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD6_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD6_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD6_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD6_XPD_V  0x1
#define RTC_IO_TOUCH_PAD6_XPD_S  20
#define RTC_IO_TOUCH_PAD6_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD6_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD6_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD6_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD6_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD6_FUN_SEL_M  ((RTC_IO_TOUCH_PAD6_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD6_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD6_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD6_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD6_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD6_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD6_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD6_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD6_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD6_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD6_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD6_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD6_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD6_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD6_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD6_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD6_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD6_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD6_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD6_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD7_REG          (DR_REG_RTCIO_BASE + 0xA0)
#define RTC_IO_TOUCH_PAD7_DRV    0x00000003
#define RTC_IO_TOUCH_PAD7_DRV_M  ((RTC_IO_TOUCH_PAD7_DRV_V)<<(RTC_IO_TOUCH_PAD7_DRV_S))
#define RTC_IO_TOUCH_PAD7_DRV_V  0x3
#define RTC_IO_TOUCH_PAD7_DRV_S  29
#define RTC_IO_TOUCH_PAD7_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD7_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD7_RDE_V  0x1
#define RTC_IO_TOUCH_PAD7_RDE_S  28
#define RTC_IO_TOUCH_PAD7_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD7_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD7_RUE_V  0x1
#define RTC_IO_TOUCH_PAD7_RUE_S  27
#define RTC_IO_TOUCH_PAD7_START    (1<<(22))
#define RTC_IO_TOUCH_PAD7_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD7_START_V  0x1
#define RTC_IO_TOUCH_PAD7_START_S  22
#define RTC_IO_TOUCH_PAD7_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD7_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD7_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD7_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD7_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD7_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD7_XPD_V  0x1
#define RTC_IO_TOUCH_PAD7_XPD_S  20
#define RTC_IO_TOUCH_PAD7_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD7_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD7_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD7_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD7_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD7_FUN_SEL_M  ((RTC_IO_TOUCH_PAD7_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD7_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD7_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD7_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD7_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD7_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD7_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD7_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD7_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD7_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD7_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD7_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD7_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD7_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD7_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD7_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD7_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD7_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD7_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD7_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD8_REG          (DR_REG_RTCIO_BASE + 0xA4)
#define RTC_IO_TOUCH_PAD8_DRV    0x00000003
#define RTC_IO_TOUCH_PAD8_DRV_M  ((RTC_IO_TOUCH_PAD8_DRV_V)<<(RTC_IO_TOUCH_PAD8_DRV_S))
#define RTC_IO_TOUCH_PAD8_DRV_V  0x3
#define RTC_IO_TOUCH_PAD8_DRV_S  29
#define RTC_IO_TOUCH_PAD8_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD8_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD8_RDE_V  0x1
#define RTC_IO_TOUCH_PAD8_RDE_S  28
#define RTC_IO_TOUCH_PAD8_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD8_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD8_RUE_V  0x1
#define RTC_IO_TOUCH_PAD8_RUE_S  27
#define RTC_IO_TOUCH_PAD8_START    (1<<(22))
#define RTC_IO_TOUCH_PAD8_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD8_START_V  0x1
#define RTC_IO_TOUCH_PAD8_START_S  22
#define RTC_IO_TOUCH_PAD8_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD8_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD8_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD8_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD8_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD8_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD8_XPD_V  0x1
#define RTC_IO_TOUCH_PAD8_XPD_S  20
#define RTC_IO_TOUCH_PAD8_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD8_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD8_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD8_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD8_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD8_FUN_SEL_M  ((RTC_IO_TOUCH_PAD8_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD8_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD8_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD8_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD8_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD8_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD8_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD8_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD8_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD8_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD8_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD8_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD8_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD8_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD8_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD8_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD8_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD8_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD8_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD8_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD9_REG          (DR_REG_RTCIO_BASE + 0xA8)
#define RTC_IO_TOUCH_PAD9_DRV    0x00000003
#define RTC_IO_TOUCH_PAD9_DRV_M  ((RTC_IO_TOUCH_PAD9_DRV_V)<<(RTC_IO_TOUCH_PAD9_DRV_S))
#define RTC_IO_TOUCH_PAD9_DRV_V  0x3
#define RTC_IO_TOUCH_PAD9_DRV_S  29
#define RTC_IO_TOUCH_PAD9_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD9_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD9_RDE_V  0x1
#define RTC_IO_TOUCH_PAD9_RDE_S  28
#define RTC_IO_TOUCH_PAD9_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD9_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD9_RUE_V  0x1
#define RTC_IO_TOUCH_PAD9_RUE_S  27
#define RTC_IO_TOUCH_PAD9_START    (1<<(22))
#define RTC_IO_TOUCH_PAD9_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD9_START_V  0x1
#define RTC_IO_TOUCH_PAD9_START_S  22
#define RTC_IO_TOUCH_PAD9_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD9_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD9_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD9_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD9_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD9_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD9_XPD_V  0x1
#define RTC_IO_TOUCH_PAD9_XPD_S  20
#define RTC_IO_TOUCH_PAD9_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD9_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD9_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD9_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD9_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD9_FUN_SEL_M  ((RTC_IO_TOUCH_PAD9_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD9_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD9_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD9_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD9_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD9_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD9_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD9_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD9_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD9_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD9_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD9_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD9_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD9_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD9_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD9_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD9_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD9_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD9_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD9_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD10_REG          (DR_REG_RTCIO_BASE + 0xAC)
#define RTC_IO_TOUCH_PAD10_DRV    0x00000003
#define RTC_IO_TOUCH_PAD10_DRV_M  ((RTC_IO_TOUCH_PAD10_DRV_V)<<(RTC_IO_TOUCH_PAD10_DRV_S))
#define RTC_IO_TOUCH_PAD10_DRV_V  0x3
#define RTC_IO_TOUCH_PAD10_DRV_S  29
#define RTC_IO_TOUCH_PAD10_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD10_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD10_RDE_V  0x1
#define RTC_IO_TOUCH_PAD10_RDE_S  28
#define RTC_IO_TOUCH_PAD10_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD10_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD10_RUE_V  0x1
#define RTC_IO_TOUCH_PAD10_RUE_S  27
#define RTC_IO_TOUCH_PAD10_START    (1<<(22))
#define RTC_IO_TOUCH_PAD10_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD10_START_V  0x1
#define RTC_IO_TOUCH_PAD10_START_S  22
#define RTC_IO_TOUCH_PAD10_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD10_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD10_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD10_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD10_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD10_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD10_XPD_V  0x1
#define RTC_IO_TOUCH_PAD10_XPD_S  20
#define RTC_IO_TOUCH_PAD10_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD10_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD10_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD10_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD10_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD10_FUN_SEL_M  ((RTC_IO_TOUCH_PAD10_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD10_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD10_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD10_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD10_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD10_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD10_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD10_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD10_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD10_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD10_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD10_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD10_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD10_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD10_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD10_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD10_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD10_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD10_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD10_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD11_REG          (DR_REG_RTCIO_BASE + 0xB0)
#define RTC_IO_TOUCH_PAD11_DRV    0x00000003
#define RTC_IO_TOUCH_PAD11_DRV_M  ((RTC_IO_TOUCH_PAD11_DRV_V)<<(RTC_IO_TOUCH_PAD11_DRV_S))
#define RTC_IO_TOUCH_PAD11_DRV_V  0x3
#define RTC_IO_TOUCH_PAD11_DRV_S  29
#define RTC_IO_TOUCH_PAD11_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD11_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD11_RDE_V  0x1
#define RTC_IO_TOUCH_PAD11_RDE_S  28
#define RTC_IO_TOUCH_PAD11_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD11_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD11_RUE_V  0x1
#define RTC_IO_TOUCH_PAD11_RUE_S  27
#define RTC_IO_TOUCH_PAD11_START    (1<<(22))
#define RTC_IO_TOUCH_PAD11_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD11_START_V  0x1
#define RTC_IO_TOUCH_PAD11_START_S  22
#define RTC_IO_TOUCH_PAD11_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD11_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD11_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD11_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD11_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD11_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD11_XPD_V  0x1
#define RTC_IO_TOUCH_PAD11_XPD_S  20
#define RTC_IO_TOUCH_PAD11_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD11_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD11_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD11_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD11_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD11_FUN_SEL_M  ((RTC_IO_TOUCH_PAD11_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD11_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD11_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD11_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD11_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD11_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD11_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD11_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD11_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD11_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD11_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD11_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD11_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD11_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD11_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD11_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD11_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD11_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD11_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD11_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD12_REG          (DR_REG_RTCIO_BASE + 0xB4)
#define RTC_IO_TOUCH_PAD12_DRV    0x00000003
#define RTC_IO_TOUCH_PAD12_DRV_M  ((RTC_IO_TOUCH_PAD12_DRV_V)<<(RTC_IO_TOUCH_PAD12_DRV_S))
#define RTC_IO_TOUCH_PAD12_DRV_V  0x3
#define RTC_IO_TOUCH_PAD12_DRV_S  29
#define RTC_IO_TOUCH_PAD12_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD12_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD12_RDE_V  0x1
#define RTC_IO_TOUCH_PAD12_RDE_S  28
#define RTC_IO_TOUCH_PAD12_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD12_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD12_RUE_V  0x1
#define RTC_IO_TOUCH_PAD12_RUE_S  27
#define RTC_IO_TOUCH_PAD12_START    (1<<(22))
#define RTC_IO_TOUCH_PAD12_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD12_START_V  0x1
#define RTC_IO_TOUCH_PAD12_START_S  22
#define RTC_IO_TOUCH_PAD12_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD12_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD12_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD12_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD12_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD12_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD12_XPD_V  0x1
#define RTC_IO_TOUCH_PAD12_XPD_S  20
#define RTC_IO_TOUCH_PAD12_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD12_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD12_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD12_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD12_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD12_FUN_SEL_M  ((RTC_IO_TOUCH_PAD12_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD12_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD12_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD12_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD12_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD12_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD12_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD12_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD12_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD12_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD12_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD12_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD12_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD12_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD12_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD12_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD12_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD12_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD12_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD12_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD13_REG          (DR_REG_RTCIO_BASE + 0xB8)
#define RTC_IO_TOUCH_PAD13_DRV    0x00000003
#define RTC_IO_TOUCH_PAD13_DRV_M  ((RTC_IO_TOUCH_PAD13_DRV_V)<<(RTC_IO_TOUCH_PAD13_DRV_S))
#define RTC_IO_TOUCH_PAD13_DRV_V  0x3
#define RTC_IO_TOUCH_PAD13_DRV_S  29
#define RTC_IO_TOUCH_PAD13_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD13_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD13_RDE_V  0x1
#define RTC_IO_TOUCH_PAD13_RDE_S  28
#define RTC_IO_TOUCH_PAD13_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD13_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD13_RUE_V  0x1
#define RTC_IO_TOUCH_PAD13_RUE_S  27
#define RTC_IO_TOUCH_PAD13_START    (1<<(22))
#define RTC_IO_TOUCH_PAD13_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD13_START_V  0x1
#define RTC_IO_TOUCH_PAD13_START_S  22
#define RTC_IO_TOUCH_PAD13_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD13_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD13_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD13_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD13_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD13_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD13_XPD_V  0x1
#define RTC_IO_TOUCH_PAD13_XPD_S  20
#define RTC_IO_TOUCH_PAD13_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD13_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD13_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD13_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD13_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD13_FUN_SEL_M  ((RTC_IO_TOUCH_PAD13_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD13_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD13_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD13_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD13_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD13_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD13_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD13_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD13_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD13_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD13_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD13_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD13_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD13_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD13_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD13_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD13_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD13_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD13_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD13_FUN_IE_S  13

#define RTC_IO_TOUCH_PAD14_REG          (DR_REG_RTCIO_BASE + 0xBC)
#define RTC_IO_TOUCH_PAD14_DRV    0x00000003
#define RTC_IO_TOUCH_PAD14_DRV_M  ((RTC_IO_TOUCH_PAD14_DRV_V)<<(RTC_IO_TOUCH_PAD14_DRV_S))
#define RTC_IO_TOUCH_PAD14_DRV_V  0x3
#define RTC_IO_TOUCH_PAD14_DRV_S  29
#define RTC_IO_TOUCH_PAD14_RDE    (1<<(28))
#define RTC_IO_TOUCH_PAD14_RDE_M  (1<<(28))
#define RTC_IO_TOUCH_PAD14_RDE_V  0x1
#define RTC_IO_TOUCH_PAD14_RDE_S  28
#define RTC_IO_TOUCH_PAD14_RUE    (1<<(27))
#define RTC_IO_TOUCH_PAD14_RUE_M  (1<<(27))
#define RTC_IO_TOUCH_PAD14_RUE_V  0x1
#define RTC_IO_TOUCH_PAD14_RUE_S  27
#define RTC_IO_TOUCH_PAD14_START    (1<<(22))
#define RTC_IO_TOUCH_PAD14_START_M  (1<<(22))
#define RTC_IO_TOUCH_PAD14_START_V  0x1
#define RTC_IO_TOUCH_PAD14_START_S  22
#define RTC_IO_TOUCH_PAD14_TIE_OPT    (1<<(21))
#define RTC_IO_TOUCH_PAD14_TIE_OPT_M  (1<<(21))
#define RTC_IO_TOUCH_PAD14_TIE_OPT_V  0x1
#define RTC_IO_TOUCH_PAD14_TIE_OPT_S  21
#define RTC_IO_TOUCH_PAD14_XPD    (1<<(20))
#define RTC_IO_TOUCH_PAD14_XPD_M  (1<<(20))
#define RTC_IO_TOUCH_PAD14_XPD_V  0x1
#define RTC_IO_TOUCH_PAD14_XPD_S  20
#define RTC_IO_TOUCH_PAD14_MUX_SEL    (1<<(19))
#define RTC_IO_TOUCH_PAD14_MUX_SEL_M  (1<<(19))
#define RTC_IO_TOUCH_PAD14_MUX_SEL_V  0x1
#define RTC_IO_TOUCH_PAD14_MUX_SEL_S  19
#define RTC_IO_TOUCH_PAD14_FUN_SEL    0x00000003
#define RTC_IO_TOUCH_PAD14_FUN_SEL_M  ((RTC_IO_TOUCH_PAD14_FUN_SEL_V)<<(RTC_IO_TOUCH_PAD14_FUN_SEL_S))
#define RTC_IO_TOUCH_PAD14_FUN_SEL_V  0x3
#define RTC_IO_TOUCH_PAD14_FUN_SEL_S  17
#define RTC_IO_TOUCH_PAD14_SLP_SEL    (1<<(16))
#define RTC_IO_TOUCH_PAD14_SLP_SEL_M  (1<<(16))
#define RTC_IO_TOUCH_PAD14_SLP_SEL_V  0x1
#define RTC_IO_TOUCH_PAD14_SLP_SEL_S  16
#define RTC_IO_TOUCH_PAD14_SLP_IE    (1<<(15))
#define RTC_IO_TOUCH_PAD14_SLP_IE_M  (1<<(15))
#define RTC_IO_TOUCH_PAD14_SLP_IE_V  0x1
#define RTC_IO_TOUCH_PAD14_SLP_IE_S  15
#define RTC_IO_TOUCH_PAD14_SLP_OE    (1<<(14))
#define RTC_IO_TOUCH_PAD14_SLP_OE_M  (1<<(14))
#define RTC_IO_TOUCH_PAD14_SLP_OE_V  0x1
#define RTC_IO_TOUCH_PAD14_SLP_OE_S  14
#define RTC_IO_TOUCH_PAD14_FUN_IE    (1<<(13))
#define RTC_IO_TOUCH_PAD14_FUN_IE_M  (1<<(13))
#define RTC_IO_TOUCH_PAD14_FUN_IE_V  0x1
#define RTC_IO_TOUCH_PAD14_FUN_IE_S  13

#define RTC_IO_XTAL_32P_PAD_REG          (DR_REG_RTCIO_BASE + 0xC0)
#define RTC_IO_X32P_DRV    0x00000003
#define RTC_IO_X32P_DRV_M  ((RTC_IO_X32P_DRV_V)<<(RTC_IO_X32P_DRV_S))
#define RTC_IO_X32P_DRV_V  0x3
#define RTC_IO_X32P_DRV_S  29
#define RTC_IO_X32P_RDE    (1<<(28))
#define RTC_IO_X32P_RDE_M  (1<<(28))
#define RTC_IO_X32P_RDE_V  0x1
#define RTC_IO_X32P_RDE_S  28
#define RTC_IO_X32P_RUE    (1<<(27))
#define RTC_IO_X32P_RUE_M  (1<<(27))
#define RTC_IO_X32P_RUE_V  0x1
#define RTC_IO_X32P_RUE_S  27
#define RTC_IO_X32P_MUX_SEL    (1<<(19))
#define RTC_IO_X32P_MUX_SEL_M  (1<<(19))
#define RTC_IO_X32P_MUX_SEL_V  0x1
#define RTC_IO_X32P_MUX_SEL_S  19
#define RTC_IO_X32P_FUN_SEL    0x00000003
#define RTC_IO_X32P_FUN_SEL_M  ((RTC_IO_X32P_FUN_SEL_V)<<(RTC_IO_X32P_FUN_SEL_S))
#define RTC_IO_X32P_FUN_SEL_V  0x3
#define RTC_IO_X32P_FUN_SEL_S  17
#define RTC_IO_X32P_SLP_SEL    (1<<(16))
#define RTC_IO_X32P_SLP_SEL_M  (1<<(16))
#define RTC_IO_X32P_SLP_SEL_V  0x1
#define RTC_IO_X32P_SLP_SEL_S  16
#define RTC_IO_X32P_SLP_IE    (1<<(15))
#define RTC_IO_X32P_SLP_IE_M  (1<<(15))
#define RTC_IO_X32P_SLP_IE_V  0x1
#define RTC_IO_X32P_SLP_IE_S  15
#define RTC_IO_X32P_SLP_OE    (1<<(14))
#define RTC_IO_X32P_SLP_OE_M  (1<<(14))
#define RTC_IO_X32P_SLP_OE_V  0x1
#define RTC_IO_X32P_SLP_OE_S  14
#define RTC_IO_X32P_FUN_IE    (1<<(13))
#define RTC_IO_X32P_FUN_IE_M  (1<<(13))
#define RTC_IO_X32P_FUN_IE_V  0x1
#define RTC_IO_X32P_FUN_IE_S  13

#define RTC_IO_XTAL_32N_PAD_REG          (DR_REG_RTCIO_BASE + 0xC4)
#define RTC_IO_X32N_DRV    0x00000003
#define RTC_IO_X32N_DRV_M  ((RTC_IO_X32N_DRV_V)<<(RTC_IO_X32N_DRV_S))
#define RTC_IO_X32N_DRV_V  0x3
#define RTC_IO_X32N_DRV_S  29
#define RTC_IO_X32N_RDE    (1<<(28))
#define RTC_IO_X32N_RDE_M  (1<<(28))
#define RTC_IO_X32N_RDE_V  0x1
#define RTC_IO_X32N_RDE_S  28
#define RTC_IO_X32N_RUE    (1<<(27))
#define RTC_IO_X32N_RUE_M  (1<<(27))
#define RTC_IO_X32N_RUE_V  0x1
#define RTC_IO_X32N_RUE_S  27
#define RTC_IO_X32N_MUX_SEL    (1<<(19))
#define RTC_IO_X32N_MUX_SEL_M  (1<<(19))
#define RTC_IO_X32N_MUX_SEL_V  0x1
#define RTC_IO_X32N_MUX_SEL_S  19
#define RTC_IO_X32N_FUN_SEL    0x00000003
#define RTC_IO_X32N_FUN_SEL_M  ((RTC_IO_X32N_FUN_SEL_V)<<(RTC_IO_X32N_FUN_SEL_S))
#define RTC_IO_X32N_FUN_SEL_V  0x3
#define RTC_IO_X32N_FUN_SEL_S  17
#define RTC_IO_X32N_SLP_SEL    (1<<(16))
#define RTC_IO_X32N_SLP_SEL_M  (1<<(16))
#define RTC_IO_X32N_SLP_SEL_V  0x1
#define RTC_IO_X32N_SLP_SEL_S  16
#define RTC_IO_X32N_SLP_IE    (1<<(15))
#define RTC_IO_X32N_SLP_IE_M  (1<<(15))
#define RTC_IO_X32N_SLP_IE_V  0x1
#define RTC_IO_X32N_SLP_IE_S  15
#define RTC_IO_X32N_SLP_OE    (1<<(14))
#define RTC_IO_X32N_SLP_OE_M  (1<<(14))
#define RTC_IO_X32N_SLP_OE_V  0x1
#define RTC_IO_X32N_SLP_OE_S  14
#define RTC_IO_X32N_FUN_IE    (1<<(13))
#define RTC_IO_X32N_FUN_IE_M  (1<<(13))
#define RTC_IO_X32N_FUN_IE_V  0x1
#define RTC_IO_X32N_FUN_IE_S  13

#define RTC_IO_PAD_DAC1_REG          (DR_REG_RTCIO_BASE + 0xC8)
#define RTC_IO_PDAC1_DRV    0x00000003
#define RTC_IO_PDAC1_DRV_M  ((RTC_IO_PDAC1_DRV_V)<<(RTC_IO_PDAC1_DRV_S))
#define RTC_IO_PDAC1_DRV_V  0x3
#define RTC_IO_PDAC1_DRV_S  29
#define RTC_IO_PDAC1_RDE    (1<<(28))
#define RTC_IO_PDAC1_RDE_M  (1<<(28))
#define RTC_IO_PDAC1_RDE_V  0x1
#define RTC_IO_PDAC1_RDE_S  28
#define RTC_IO_PDAC1_RUE    (1<<(27))
#define RTC_IO_PDAC1_RUE_M  (1<<(27))
#define RTC_IO_PDAC1_RUE_V  0x1
#define RTC_IO_PDAC1_RUE_S  27
#define RTC_IO_PDAC1_MUX_SEL    (1<<(19))
#define RTC_IO_PDAC1_MUX_SEL_M  (1<<(19))
#define RTC_IO_PDAC1_MUX_SEL_V  0x1
#define RTC_IO_PDAC1_MUX_SEL_S  19
#define RTC_IO_PDAC1_FUN_SEL    0x00000003
#define RTC_IO_PDAC1_FUN_SEL_M  ((RTC_IO_PDAC1_FUN_SEL_V)<<(RTC_IO_PDAC1_FUN_SEL_S))
#define RTC_IO_PDAC1_FUN_SEL_V  0x3
#define RTC_IO_PDAC1_FUN_SEL_S  17
#define RTC_IO_PDAC1_SLP_SEL    (1<<(16))
#define RTC_IO_PDAC1_SLP_SEL_M  (1<<(16))
#define RTC_IO_PDAC1_SLP_SEL_V  0x1
#define RTC_IO_PDAC1_SLP_SEL_S  16
#define RTC_IO_PDAC1_SLP_IE    (1<<(15))
#define RTC_IO_PDAC1_SLP_IE_M  (1<<(15))
#define RTC_IO_PDAC1_SLP_IE_V  0x1
#define RTC_IO_PDAC1_SLP_IE_S  15
#define RTC_IO_PDAC1_SLP_OE    (1<<(14))
#define RTC_IO_PDAC1_SLP_OE_M  (1<<(14))
#define RTC_IO_PDAC1_SLP_OE_V  0x1
#define RTC_IO_PDAC1_SLP_OE_S  14
#define RTC_IO_PDAC1_FUN_IE    (1<<(13))
#define RTC_IO_PDAC1_FUN_IE_M  (1<<(13))
#define RTC_IO_PDAC1_FUN_IE_V  0x1
#define RTC_IO_PDAC1_FUN_IE_S  13
#define RTC_IO_PDAC1_DAC_XPD_FORCE    (1<<(12))
#define RTC_IO_PDAC1_DAC_XPD_FORCE_M  (1<<(12))
#define RTC_IO_PDAC1_DAC_XPD_FORCE_V  0x1
#define RTC_IO_PDAC1_DAC_XPD_FORCE_S  12
#define RTC_IO_PDAC1_XPD_DAC    (1<<(11))
#define RTC_IO_PDAC1_XPD_DAC_M  (1<<(11))
#define RTC_IO_PDAC1_XPD_DAC_V  0x1
#define RTC_IO_PDAC1_XPD_DAC_S  11
#define RTC_IO_PDAC1_DAC    0x000000FF
#define RTC_IO_PDAC1_DAC_M  ((RTC_IO_PDAC1_DAC_V)<<(RTC_IO_PDAC1_DAC_S))
#define RTC_IO_PDAC1_DAC_V  0xFF
#define RTC_IO_PDAC1_DAC_S  3

#define RTC_IO_PAD_DAC2_REG          (DR_REG_RTCIO_BASE + 0xCC)
#define RTC_IO_PDAC2_DRV    0x00000003
#define RTC_IO_PDAC2_DRV_M  ((RTC_IO_PDAC2_DRV_V)<<(RTC_IO_PDAC2_DRV_S))
#define RTC_IO_PDAC2_DRV_V  0x3
#define RTC_IO_PDAC2_DRV_S  29
#define RTC_IO_PDAC2_RDE    (1<<(28))
#define RTC_IO_PDAC2_RDE_M  (1<<(28))
#define RTC_IO_PDAC2_RDE_V  0x1
#define RTC_IO_PDAC2_RDE_S  28
#define RTC_IO_PDAC2_RUE    (1<<(27))
#define RTC_IO_PDAC2_RUE_M  (1<<(27))
#define RTC_IO_PDAC2_RUE_V  0x1
#define RTC_IO_PDAC2_RUE_S  27
#define RTC_IO_PDAC2_MUX_SEL    (1<<(19))
#define RTC_IO_PDAC2_MUX_SEL_M  (1<<(19))
#define RTC_IO_PDAC2_MUX_SEL_V  0x1
#define RTC_IO_PDAC2_MUX_SEL_S  19
#define RTC_IO_PDAC2_FUN_SEL    0x00000003
#define RTC_IO_PDAC2_FUN_SEL_M  ((RTC_IO_PDAC2_FUN_SEL_V)<<(RTC_IO_PDAC2_FUN_SEL_S))
#define RTC_IO_PDAC2_FUN_SEL_V  0x3
#define RTC_IO_PDAC2_FUN_SEL_S  17
#define RTC_IO_PDAC2_SLP_SEL    (1<<(16))
#define RTC_IO_PDAC2_SLP_SEL_M  (1<<(16))
#define RTC_IO_PDAC2_SLP_SEL_V  0x1
#define RTC_IO_PDAC2_SLP_SEL_S  16
#define RTC_IO_PDAC2_SLP_IE    (1<<(15))
#define RTC_IO_PDAC2_SLP_IE_M  (1<<(15))
#define RTC_IO_PDAC2_SLP_IE_V  0x1
#define RTC_IO_PDAC2_SLP_IE_S  15
#define RTC_IO_PDAC2_SLP_OE    (1<<(14))
#define RTC_IO_PDAC2_SLP_OE_M  (1<<(14))
#define RTC_IO_PDAC2_SLP_OE_V  0x1
#define RTC_IO_PDAC2_SLP_OE_S  14
#define RTC_IO_PDAC2_FUN_IE    (1<<(13))
#define RTC_IO_PDAC2_FUN_IE_M  (1<<(13))
#define RTC_IO_PDAC2_FUN_IE_V  0x1
#define RTC_IO_PDAC2_FUN_IE_S  13
#define RTC_IO_PDAC2_DAC_XPD_FORCE    (1<<(12))
#define RTC_IO_PDAC2_DAC_XPD_FORCE_M  (1<<(12))
#define RTC_IO_PDAC2_DAC_XPD_FORCE_V  0x1
#define RTC_IO_PDAC2_DAC_XPD_FORCE_S  12
#define RTC_IO_PDAC2_XPD_DAC    (1<<(11))
#define RTC_IO_PDAC2_XPD_DAC_M  (1<<(11))
#define RTC_IO_PDAC2_XPD_DAC_V  0x1
#define RTC_IO_PDAC2_XPD_DAC_S  11
#define RTC_IO_PDAC2_DAC    0x000000FF
#define RTC_IO_PDAC2_DAC_M  ((RTC_IO_PDAC2_DAC_V)<<(RTC_IO_PDAC2_DAC_S))
#define RTC_IO_PDAC2_DAC_V  0xFF
#define RTC_IO_PDAC2_DAC_S  3

#define RTC_IO_RTC_PAD19_REG          (DR_REG_RTCIO_BASE + 0xD0)
#define RTC_IO_PAD19_DRV    0x00000003
#define RTC_IO_PAD19_DRV_M  ((RTC_IO_PAD19_DRV_V)<<(RTC_IO_PAD19_DRV_S))
#define RTC_IO_PAD19_DRV_V  0x3
#define RTC_IO_PAD19_DRV_S  29
#define RTC_IO_PAD19_RDE    (1<<(28))
#define RTC_IO_PAD19_RDE_M  (1<<(28))
#define RTC_IO_PAD19_RDE_V  0x1
#define RTC_IO_PAD19_RDE_S  28
#define RTC_IO_PAD19_RUE    (1<<(27))
#define RTC_IO_PAD19_RUE_M  (1<<(27))
#define RTC_IO_PAD19_RUE_V  0x1
#define RTC_IO_PAD19_RUE_S  27
#define RTC_IO_PAD19_MUX_SEL    (1<<(19))
#define RTC_IO_PAD19_MUX_SEL_M  (1<<(19))
#define RTC_IO_PAD19_MUX_SEL_V  0x1
#define RTC_IO_PAD19_MUX_SEL_S  19
#define RTC_IO_PAD19_FUN_SEL    0x00000003
#define RTC_IO_PAD19_FUN_SEL_M  ((RTC_IO_PAD19_FUN_SEL_V)<<(RTC_IO_PAD19_FUN_SEL_S))
#define RTC_IO_PAD19_FUN_SEL_V  0x3
#define RTC_IO_PAD19_FUN_SEL_S  17
#define RTC_IO_PAD19_SLP_SEL    (1<<(16))
#define RTC_IO_PAD19_SLP_SEL_M  (1<<(16))
#define RTC_IO_PAD19_SLP_SEL_V  0x1
#define RTC_IO_PAD19_SLP_SEL_S  16
#define RTC_IO_PAD19_SLP_IE    (1<<(15))
#define RTC_IO_PAD19_SLP_IE_M  (1<<(15))
#define RTC_IO_PAD19_SLP_IE_V  0x1
#define RTC_IO_PAD19_SLP_IE_S  15
#define RTC_IO_PAD19_SLP_OE    (1<<(14))
#define RTC_IO_PAD19_SLP_OE_M  (1<<(14))
#define RTC_IO_PAD19_SLP_OE_V  0x1
#define RTC_IO_PAD19_SLP_OE_S  14
#define RTC_IO_PAD19_FUN_IE    (1<<(13))
#define RTC_IO_PAD19_FUN_IE_M  (1<<(13))
#define RTC_IO_PAD19_FUN_IE_V  0x1
#define RTC_IO_PAD19_FUN_IE_S  13

#define RTC_IO_RTC_PAD20_REG          (DR_REG_RTCIO_BASE + 0xD4)
#define RTC_IO_PAD20_DRV    0x00000003
#define RTC_IO_PAD20_DRV_M  ((RTC_IO_PAD20_DRV_V)<<(RTC_IO_PAD20_DRV_S))
#define RTC_IO_PAD20_DRV_V  0x3
#define RTC_IO_PAD20_DRV_S  29
#define RTC_IO_PAD20_RDE    (1<<(28))
#define RTC_IO_PAD20_RDE_M  (1<<(28))
#define RTC_IO_PAD20_RDE_V  0x1
#define RTC_IO_PAD20_RDE_S  28
#define RTC_IO_PAD20_RUE    (1<<(27))
#define RTC_IO_PAD20_RUE_M  (1<<(27))
#define RTC_IO_PAD20_RUE_V  0x1
#define RTC_IO_PAD20_RUE_S  27
#define RTC_IO_PAD20_MUX_SEL    (1<<(19))
#define RTC_IO_PAD20_MUX_SEL_M  (1<<(19))
#define RTC_IO_PAD20_MUX_SEL_V  0x1
#define RTC_IO_PAD20_MUX_SEL_S  19
#define RTC_IO_PAD20_FUN_SEL    0x00000003
#define RTC_IO_PAD20_FUN_SEL_M  ((RTC_IO_PAD20_FUN_SEL_V)<<(RTC_IO_PAD20_FUN_SEL_S))
#define RTC_IO_PAD20_FUN_SEL_V  0x3
#define RTC_IO_PAD20_FUN_SEL_S  17
#define RTC_IO_PAD20_SLP_SEL    (1<<(16))
#define RTC_IO_PAD20_SLP_SEL_M  (1<<(16))
#define RTC_IO_PAD20_SLP_SEL_V  0x1
#define RTC_IO_PAD20_SLP_SEL_S  16
#define RTC_IO_PAD20_SLP_IE    (1<<(15))
#define RTC_IO_PAD20_SLP_IE_M  (1<<(15))
#define RTC_IO_PAD20_SLP_IE_V  0x1
#define RTC_IO_PAD20_SLP_IE_S  15
#define RTC_IO_PAD20_SLP_OE    (1<<(14))
#define RTC_IO_PAD20_SLP_OE_M  (1<<(14))
#define RTC_IO_PAD20_SLP_OE_V  0x1
#define RTC_IO_PAD20_SLP_OE_S  14
#define RTC_IO_PAD20_FUN_IE    (1<<(13))
#define RTC_IO_PAD20_FUN_IE_M  (1<<(13))
#define RTC_IO_PAD20_FUN_IE_V  0x1
#define RTC_IO_PAD20_FUN_IE_S  13

#define RTC_IO_RTC_PAD21_REG          (DR_REG_RTCIO_BASE + 0xD8)
#define RTC_IO_PAD21_DRV    0x00000003
#define RTC_IO_PAD21_DRV_M  ((RTC_IO_PAD21_DRV_V)<<(RTC_IO_PAD21_DRV_S))
#define RTC_IO_PAD21_DRV_V  0x3
#define RTC_IO_PAD21_DRV_S  29
#define RTC_IO_PAD21_RDE    (1<<(28))
#define RTC_IO_PAD21_RDE_M  (1<<(28))
#define RTC_IO_PAD21_RDE_V  0x1
#define RTC_IO_PAD21_RDE_S  28
#define RTC_IO_PAD21_RUE    (1<<(27))
#define RTC_IO_PAD21_RUE_M  (1<<(27))
#define RTC_IO_PAD21_RUE_V  0x1
#define RTC_IO_PAD21_RUE_S  27
#define RTC_IO_PAD21_MUX_SEL    (1<<(19))
#define RTC_IO_PAD21_MUX_SEL_M  (1<<(19))
#define RTC_IO_PAD21_MUX_SEL_V  0x1
#define RTC_IO_PAD21_MUX_SEL_S  19
#define RTC_IO_PAD21_FUN_SEL    0x00000003
#define RTC_IO_PAD21_FUN_SEL_M  ((RTC_IO_PAD21_FUN_SEL_V)<<(RTC_IO_PAD21_FUN_SEL_S))
#define RTC_IO_PAD21_FUN_SEL_V  0x3
#define RTC_IO_PAD21_FUN_SEL_S  17
#define RTC_IO_PAD21_SLP_SEL    (1<<(16))
#define RTC_IO_PAD21_SLP_SEL_M  (1<<(16))
#define RTC_IO_PAD21_SLP_SEL_V  0x1
#define RTC_IO_PAD21_SLP_SEL_S  16
#define RTC_IO_PAD21_SLP_IE    (1<<(15))
#define RTC_IO_PAD21_SLP_IE_M  (1<<(15))
#define RTC_IO_PAD21_SLP_IE_V  0x1
#define RTC_IO_PAD21_SLP_IE_S  15
#define RTC_IO_PAD21_SLP_OE    (1<<(14))
#define RTC_IO_PAD21_SLP_OE_M  (1<<(14))
#define RTC_IO_PAD21_SLP_OE_V  0x1
#define RTC_IO_PAD21_SLP_OE_S  14
#define RTC_IO_PAD21_FUN_IE    (1<<(13))
#define RTC_IO_PAD21_FUN_IE_M  (1<<(13))
#define RTC_IO_PAD21_FUN_IE_V  0x1
#define RTC_IO_PAD21_FUN_IE_S  13

#define RTC_IO_EXT_WAKEUP0_REG          (DR_REG_RTCIO_BASE + 0xDC)
#define RTC_IO_EXT_WAKEUP0_SEL    0x0000001F
#define RTC_IO_EXT_WAKEUP0_SEL_M  ((RTC_IO_EXT_WAKEUP0_SEL_V)<<(RTC_IO_EXT_WAKEUP0_SEL_S))
#define RTC_IO_EXT_WAKEUP0_SEL_V  0x1F
#define RTC_IO_EXT_WAKEUP0_SEL_S  27

#define RTC_IO_XTL_EXT_CTR_REG          (DR_REG_RTCIO_BASE + 0xE0)
#define RTC_IO_XTL_EXT_CTR_SEL    0x0000001F
#define RTC_IO_XTL_EXT_CTR_SEL_M  ((RTC_IO_XTL_EXT_CTR_SEL_V)<<(RTC_IO_XTL_EXT_CTR_SEL_S))
#define RTC_IO_XTL_EXT_CTR_SEL_V  0x1F
#define RTC_IO_XTL_EXT_CTR_SEL_S  27

#define RTC_IO_SAR_I2C_IO_REG          (DR_REG_RTCIO_BASE + 0xE4)
#define RTC_IO_SAR_I2C_SDA_SEL    0x00000003
#define RTC_IO_SAR_I2C_SDA_SEL_M  ((RTC_IO_SAR_I2C_SDA_SEL_V)<<(RTC_IO_SAR_I2C_SDA_SEL_S))
#define RTC_IO_SAR_I2C_SDA_SEL_V  0x3
#define RTC_IO_SAR_I2C_SDA_SEL_S  30
#define RTC_IO_SAR_I2C_SCL_SEL    0x00000003
#define RTC_IO_SAR_I2C_SCL_SEL_M  ((RTC_IO_SAR_I2C_SCL_SEL_V)<<(RTC_IO_SAR_I2C_SCL_SEL_S))
#define RTC_IO_SAR_I2C_SCL_SEL_V  0x3
#define RTC_IO_SAR_I2C_SCL_SEL_S  28
#define RTC_IO_SAR_DEBUG_BIT_SEL    0x0000001F
#define RTC_IO_SAR_DEBUG_BIT_SEL_M  ((RTC_IO_SAR_DEBUG_BIT_SEL_V)<<(RTC_IO_SAR_DEBUG_BIT_SEL_S))
#define RTC_IO_SAR_DEBUG_BIT_SEL_V  0x1F
#define RTC_IO_SAR_DEBUG_BIT_SEL_S  23

#define RTC_IO_TOUCH_CTRL_REG          (DR_REG_RTCIO_BASE + 0xE8)
#define RTC_IO_IO_TOUCH_BUFMODE    (1<<(4))
#define RTC_IO_IO_TOUCH_BUFMODE_M  (1<<(4))
#define RTC_IO_IO_TOUCH_BUFMODE_V  0x1
#define RTC_IO_IO_TOUCH_BUFMODE_S  4
#define RTC_IO_IO_TOUCH_BUFSEL    0x0000000F
#define RTC_IO_IO_TOUCH_BUFSEL_M  ((RTC_IO_IO_TOUCH_BUFSEL_V)<<(RTC_IO_IO_TOUCH_BUFSEL_S))
#define RTC_IO_IO_TOUCH_BUFSEL_V  0xF
#define RTC_IO_IO_TOUCH_BUFSEL_S  0

#define RTC_IO_DATE_REG          (DR_REG_RTCIO_BASE + 0x1FC)
#define RTC_IO_DATE    0x0FFFFFFF
#define RTC_IO_DATE_M  ((RTC_IO_DATE_V)<<(RTC_IO_DATE_S))
#define RTC_IO_DATE_V  0xFFFFFFF
#define RTC_IO_DATE_S  0

#define SOC_RTCIO_PIN_COUNT   22
#define SOC_RTCIO_INPUT_OUTPUT_SUPPORTED 1
#define SOC_RTCIO_HOLD_SUPPORTED 1
#define SOC_RTCIO_WAKE_SUPPORTED 1


typedef struct {
	uint32_t reg;       /*!< Register of RTC pad, or 0 if not an RTC GPIO */
	uint32_t mux;       /*!< Bit mask for selecting digital pad or RTC pad */
	uint32_t func;      /*!< Shift of pad function (FUN_SEL) field */
	uint32_t ie;        /*!< Mask of input enable */
	uint32_t pullup;    /*!< Mask of pullup enable */
	uint32_t pulldown;  /*!< Mask of pulldown enable */
	uint32_t slpsel;    /*!< If slpsel bit is set, slpie will be used as pad input enabled signal in sleep mode */
	uint32_t slpie;     /*!< Mask of input enable in sleep mode */
	uint32_t slpoe;     /*!< Mask of output enable in sleep mode */
	uint32_t hold;      /*!< Mask of hold enable */
	uint32_t hold_force;/*!< Mask of hold_force bit for RTC IO in RTC_CNTL_HOLD_REG */
	uint32_t drv_v;     /*!< Mask of drive capability */
	uint32_t drv_s;     /*!< Offset of drive capability */
	int rtc_num;        /*!< GPIO number (corresponds to RTC pad) */
} rtc_io_desc_t;

extern const rtc_io_desc_t rtc_io_desc[SOC_RTCIO_PIN_COUNT];
extern const int rtc_io_num_map[SOC_GPIO_PIN_COUNT];

typedef struct {
	uint32_t reg;       /*!< Register of RTC pad, or 0 if not an RTC GPIO */
	uint32_t mux;       /*!< Bit mask for selecting digital pad or RTC pad */
	uint32_t func;      /*!< Shift of pad function (FUN_SEL) field */
	uint32_t ie;        /*!< Mask of input enable */
	uint32_t pullup;    /*!< Mask of pullup enable */
	uint32_t pulldown;  /*!< Mask of pulldown enable */
	uint32_t slpsel;    /*!< If slpsel bit is set, slpie will be used as pad input enabled signal in sleep mode */
	uint32_t slpie;     /*!< Mask of input enable in sleep mode */
	uint32_t hold;      /*!< Mask of hold enable */
	uint32_t hold_force;/*!< Mask of hold_force bit for RTC IO in RTC_CNTL_HOLD_FORCE_REG */
	uint32_t drv_v;     /*!< Mask of drive capability */
	uint32_t drv_s;     /*!< Offset of drive capability */
	int rtc_num;        /*!< RTC IO number, or -1 if not an RTC GPIO */
} rtc_gpio_desc_t;

extern const rtc_gpio_desc_t rtc_gpio_desc[SOC_GPIO_PIN_COUNT];



typedef enum {
	RTCIO_FUNC_RTC = 0x0,		  /*!< The pin controled by RTC module. */
	RTCIO_FUNC_DIGITAL = 0x1,	  /*!< The pin controlled by DIGITAL module. */
} rtcio_ll_func_t;

typedef enum {
	RTCIO_WAKEUP_DISABLE	= 0,	/*!< Disable GPIO interrupt */
	RTCIO_WAKEUP_LOW_LEVEL	= 0x4,	/*!< GPIO interrupt type : input low level trigger */
	RTCIO_WAKEUP_HIGH_LEVEL = 0x5,	/*!< GPIO interrupt type : input high level trigger */
} rtcio_ll_wake_type_t;

typedef enum {
	RTCIO_OUTPUT_NORMAL = 0,	/*!< RTCIO output mode is normal. */
	RTCIO_OUTPUT_OD = 0x1,		/*!< RTCIO output mode is open-drain. */
} rtcio_ll_out_mode_t;

void rtcio_ll_function_select(int rtcio_num, rtcio_ll_func_t func);
void rtcio_ll_output_enable(int rtcio_num);
void rtcio_ll_output_disable(int rtcio_num);
void rtcio_ll_set_level(int rtcio_num, uint32_t level);
void rtcio_ll_input_enable(int rtcio_num);
void rtcio_ll_input_disable(int rtcio_num);
uint32_t rtcio_ll_get_level(int rtcio_num);
void rtcio_ll_set_drive_capability(int rtcio_num, uint32_t strength);
uint32_t rtcio_ll_get_drive_capability(int rtcio_num);
void rtcio_ll_output_mode_set(int rtcio_num, rtcio_ll_out_mode_t mode);
void rtcio_ll_pullup_enable(int rtcio_num);
void rtcio_ll_pullup_disable(int rtcio_num);
void rtcio_ll_pulldown_enable(int rtcio_num);
void rtcio_ll_pulldown_disable(int rtcio_num);
void rtcio_ll_force_hold_enable(int rtcio_num);
void rtcio_ll_force_hold_disable(int rtcio_num);
void rtcio_ll_force_hold_all(void);
void rtcio_ll_force_unhold_all(void);
void rtcio_ll_wakeup_enable(int rtcio_num, rtcio_ll_wake_type_t type);
void rtcio_ll_wakeup_disable(int rtcio_num);
void rtcio_ll_enable_output_in_sleep(gpio_num_t gpio_num);
void rtcio_ll_in_sleep_disable_output(gpio_num_t gpio_num);
void rtcio_ll_in_sleep_enable_input(gpio_num_t gpio_num);
void rtcio_ll_in_sleep_disable_input(gpio_num_t gpio_num);
void rtcio_ll_enable_sleep_setting(gpio_num_t gpio_num);
void rtcio_ll_disable_sleep_setting(gpio_num_t gpio_num);
void rtcio_ll_ext0_set_wakeup_pin(int rtcio_num, int level);

/*
const int rtc_io_num_map[SOC_GPIO_PIN_COUNT] = {
	RTCIO_GPIO0_CHANNEL,	//GPIO0
	RTCIO_GPIO1_CHANNEL,	//GPIO1
	RTCIO_GPIO2_CHANNEL,	//GPIO2
	RTCIO_GPIO3_CHANNEL,	//GPIO3
	RTCIO_GPIO4_CHANNEL,	//GPIO4
	RTCIO_GPIO5_CHANNEL,	//GPIO5
	RTCIO_GPIO6_CHANNEL,	//GPIO6
	RTCIO_GPIO7_CHANNEL,	//GPIO7
	RTCIO_GPIO8_CHANNEL,	//GPIO8
	RTCIO_GPIO9_CHANNEL,	//GPIO9
	RTCIO_GPIO10_CHANNEL,	//GPIO10
	RTCIO_GPIO11_CHANNEL,	//GPIO11
	RTCIO_GPIO12_CHANNEL,	//GPIO12
	RTCIO_GPIO13_CHANNEL,	//GPIO13
	RTCIO_GPIO14_CHANNEL,	//GPIO14
	RTCIO_GPIO15_CHANNEL,	//GPIO15
	RTCIO_GPIO16_CHANNEL,	//GPIO16
	RTCIO_GPIO17_CHANNEL,	//GPIO17
	RTCIO_GPIO18_CHANNEL,	//GPIO18
	RTCIO_GPIO19_CHANNEL,	//GPIO19
	RTCIO_GPIO20_CHANNEL,	//GPIO20
	RTCIO_GPIO21_CHANNEL,	//GPIO21
	-1,//GPIO22
	-1,//GPIO23
	-1,//GPIO24
	-1,//GPIO25
	-1,//GPIO26
	-1,//GPIO27
	-1,//GPIO28
	-1,//GPIO29
	-1,//GPIO30
	-1,//GPIO31
	-1,//GPIO32
	-1,//GPIO33
	-1,//GPIO34
	-1,//GPIO35
	-1,//GPIO36
	-1,//GPIO37
	-1,//GPIO38
	-1,//GPIO39
	-1,//GPIO40
	-1,//GPIO41
	-1,//GPIO42
	-1,//GPIO43
	-1,//GPIO44
	-1,//GPIO45
	-1,//GPIO46
	-1,//GPIO47
	-1,//GPIO48
};
*/

//Reg,Mux,Fun,IE,Up,Down,Rtc_number
const rtc_io_desc_t rtc_io_desc[SOC_RTCIO_PIN_COUNT] = {

	{
		RTC_IO_TOUCH_PAD0_REG,
		RTC_IO_TOUCH_PAD0_MUX_SEL_M,
		RTC_IO_TOUCH_PAD0_FUN_SEL_S,
		RTC_IO_TOUCH_PAD0_FUN_IE_M,
		RTC_IO_TOUCH_PAD0_RUE_M,
		RTC_IO_TOUCH_PAD0_RDE_M,
		RTC_IO_TOUCH_PAD0_SLP_SEL_M,
		RTC_IO_TOUCH_PAD0_SLP_IE_M,
		RTC_IO_TOUCH_PAD0_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD0_HOLD_M,
		RTC_IO_TOUCH_PAD0_DRV_V,
		RTC_IO_TOUCH_PAD0_DRV_S,
		RTCIO_CHANNEL_0_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD1_REG,
		RTC_IO_TOUCH_PAD1_MUX_SEL_M,
		RTC_IO_TOUCH_PAD1_FUN_SEL_S,
		RTC_IO_TOUCH_PAD1_FUN_IE_M,
		RTC_IO_TOUCH_PAD1_RUE_M,
		RTC_IO_TOUCH_PAD1_RDE_M,
		RTC_IO_TOUCH_PAD1_SLP_SEL_M,
		RTC_IO_TOUCH_PAD1_SLP_IE_M,
		RTC_IO_TOUCH_PAD1_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD1_HOLD_M,
		RTC_IO_TOUCH_PAD1_DRV_V,
		RTC_IO_TOUCH_PAD1_DRV_S,
		RTCIO_CHANNEL_1_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD2_REG,
		RTC_IO_TOUCH_PAD2_MUX_SEL_M,
		RTC_IO_TOUCH_PAD2_FUN_SEL_S,
		RTC_IO_TOUCH_PAD2_FUN_IE_M,
		RTC_IO_TOUCH_PAD2_RUE_M,
		RTC_IO_TOUCH_PAD2_RDE_M,
		RTC_IO_TOUCH_PAD2_SLP_SEL_M,
		RTC_IO_TOUCH_PAD2_SLP_IE_M,
		RTC_IO_TOUCH_PAD2_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD2_HOLD_M,
		RTC_IO_TOUCH_PAD2_DRV_V,
		RTC_IO_TOUCH_PAD2_DRV_S,
		RTCIO_CHANNEL_2_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD3_REG,
		RTC_IO_TOUCH_PAD3_MUX_SEL_M,
		RTC_IO_TOUCH_PAD3_FUN_SEL_S,
		RTC_IO_TOUCH_PAD3_FUN_IE_M,
		RTC_IO_TOUCH_PAD3_RUE_M,
		RTC_IO_TOUCH_PAD3_RDE_M,
		RTC_IO_TOUCH_PAD3_SLP_SEL_M,
		RTC_IO_TOUCH_PAD3_SLP_IE_M,
		RTC_IO_TOUCH_PAD3_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD3_HOLD_M,
		RTC_IO_TOUCH_PAD3_DRV_V,
		RTC_IO_TOUCH_PAD3_DRV_S,
		RTCIO_CHANNEL_3_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD4_REG,
		RTC_IO_TOUCH_PAD4_MUX_SEL_M,
		RTC_IO_TOUCH_PAD4_FUN_SEL_S,
		RTC_IO_TOUCH_PAD4_FUN_IE_M,
		RTC_IO_TOUCH_PAD4_RUE_M,
		RTC_IO_TOUCH_PAD4_RDE_M,
		RTC_IO_TOUCH_PAD4_SLP_SEL_M,
		RTC_IO_TOUCH_PAD4_SLP_IE_M,
		RTC_IO_TOUCH_PAD4_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD4_HOLD_M,
		RTC_IO_TOUCH_PAD4_DRV_V,
		RTC_IO_TOUCH_PAD4_DRV_S,
		RTCIO_CHANNEL_4_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD5_REG,
		RTC_IO_TOUCH_PAD5_MUX_SEL_M,
		RTC_IO_TOUCH_PAD5_FUN_SEL_S,
		RTC_IO_TOUCH_PAD5_FUN_IE_M,
		RTC_IO_TOUCH_PAD5_RUE_M,
		RTC_IO_TOUCH_PAD5_RDE_M,
		RTC_IO_TOUCH_PAD5_SLP_SEL_M,
		RTC_IO_TOUCH_PAD5_SLP_IE_M,
		RTC_IO_TOUCH_PAD5_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD5_HOLD_M,
		RTC_IO_TOUCH_PAD5_DRV_V,
		RTC_IO_TOUCH_PAD5_DRV_S,
		RTCIO_CHANNEL_5_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD6_REG,
		RTC_IO_TOUCH_PAD6_MUX_SEL_M,
		RTC_IO_TOUCH_PAD6_FUN_SEL_S,
		RTC_IO_TOUCH_PAD6_FUN_IE_M,
		RTC_IO_TOUCH_PAD6_RUE_M,
		RTC_IO_TOUCH_PAD6_RDE_M,
		RTC_IO_TOUCH_PAD6_SLP_SEL_M,
		RTC_IO_TOUCH_PAD6_SLP_IE_M,
		RTC_IO_TOUCH_PAD6_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD6_HOLD_M,
		RTC_IO_TOUCH_PAD6_DRV_V,
		RTC_IO_TOUCH_PAD6_DRV_S,
		RTCIO_CHANNEL_6_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD7_REG,
		RTC_IO_TOUCH_PAD7_MUX_SEL_M,
		RTC_IO_TOUCH_PAD7_FUN_SEL_S,
		RTC_IO_TOUCH_PAD7_FUN_IE_M,
		RTC_IO_TOUCH_PAD7_RUE_M,
		RTC_IO_TOUCH_PAD7_RDE_M,
		RTC_IO_TOUCH_PAD7_SLP_SEL_M,
		RTC_IO_TOUCH_PAD7_SLP_IE_M,
		RTC_IO_TOUCH_PAD7_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD7_HOLD_M,
		RTC_IO_TOUCH_PAD7_DRV_V,
		RTC_IO_TOUCH_PAD7_DRV_S,
		RTCIO_CHANNEL_7_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD8_REG,
		RTC_IO_TOUCH_PAD8_MUX_SEL_M,
		RTC_IO_TOUCH_PAD8_FUN_SEL_S,
		RTC_IO_TOUCH_PAD8_FUN_IE_M,
		RTC_IO_TOUCH_PAD8_RUE_M,
		RTC_IO_TOUCH_PAD8_RDE_M,
		RTC_IO_TOUCH_PAD8_SLP_SEL_M,
		RTC_IO_TOUCH_PAD8_SLP_IE_M,
		RTC_IO_TOUCH_PAD8_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD8_HOLD_M,
		RTC_IO_TOUCH_PAD8_DRV_V,
		RTC_IO_TOUCH_PAD8_DRV_S,
		RTCIO_CHANNEL_8_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD9_REG,
		RTC_IO_TOUCH_PAD9_MUX_SEL_M,
		RTC_IO_TOUCH_PAD9_FUN_SEL_S,
		RTC_IO_TOUCH_PAD9_FUN_IE_M,
		RTC_IO_TOUCH_PAD9_RUE_M,
		RTC_IO_TOUCH_PAD9_RDE_M,
		RTC_IO_TOUCH_PAD9_SLP_SEL_M,
		RTC_IO_TOUCH_PAD9_SLP_IE_M,
		RTC_IO_TOUCH_PAD9_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD9_HOLD_M,
		RTC_IO_TOUCH_PAD9_DRV_V,
		RTC_IO_TOUCH_PAD9_DRV_S,
		RTCIO_CHANNEL_9_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD10_REG,
		RTC_IO_TOUCH_PAD10_MUX_SEL_M,
		RTC_IO_TOUCH_PAD10_FUN_SEL_S,
		RTC_IO_TOUCH_PAD10_FUN_IE_M,
		RTC_IO_TOUCH_PAD10_RUE_M,
		RTC_IO_TOUCH_PAD10_RDE_M,
		RTC_IO_TOUCH_PAD10_SLP_SEL_M,
		RTC_IO_TOUCH_PAD10_SLP_IE_M,
		RTC_IO_TOUCH_PAD10_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD10_HOLD_M,
		RTC_IO_TOUCH_PAD10_DRV_V,
		RTC_IO_TOUCH_PAD10_DRV_S,
		RTCIO_CHANNEL_10_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD11_REG,
		RTC_IO_TOUCH_PAD11_MUX_SEL_M,
		RTC_IO_TOUCH_PAD11_FUN_SEL_S,
		RTC_IO_TOUCH_PAD11_FUN_IE_M,
		RTC_IO_TOUCH_PAD11_RUE_M,
		RTC_IO_TOUCH_PAD11_RDE_M,
		RTC_IO_TOUCH_PAD11_SLP_SEL_M,
		RTC_IO_TOUCH_PAD11_SLP_IE_M,
		RTC_IO_TOUCH_PAD11_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD11_HOLD_M,
		RTC_IO_TOUCH_PAD11_DRV_V,
		RTC_IO_TOUCH_PAD11_DRV_S,
		RTCIO_CHANNEL_11_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD12_REG,
		RTC_IO_TOUCH_PAD12_MUX_SEL_M,
		RTC_IO_TOUCH_PAD12_FUN_SEL_S,
		RTC_IO_TOUCH_PAD12_FUN_IE_M,
		RTC_IO_TOUCH_PAD12_RUE_M,
		RTC_IO_TOUCH_PAD12_RDE_M,
		RTC_IO_TOUCH_PAD12_SLP_SEL_M,
		RTC_IO_TOUCH_PAD12_SLP_IE_M,
		RTC_IO_TOUCH_PAD12_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD12_HOLD_M,
		RTC_IO_TOUCH_PAD12_DRV_V,
		RTC_IO_TOUCH_PAD12_DRV_S,
		RTCIO_CHANNEL_12_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD13_REG,
		RTC_IO_TOUCH_PAD13_MUX_SEL_M,
		RTC_IO_TOUCH_PAD13_FUN_SEL_S,
		RTC_IO_TOUCH_PAD13_FUN_IE_M,
		RTC_IO_TOUCH_PAD13_RUE_M,
		RTC_IO_TOUCH_PAD13_RDE_M,
		RTC_IO_TOUCH_PAD13_SLP_SEL_M,
		RTC_IO_TOUCH_PAD13_SLP_IE_M,
		RTC_IO_TOUCH_PAD13_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD13_HOLD_M,
		RTC_IO_TOUCH_PAD13_DRV_V,
		RTC_IO_TOUCH_PAD13_DRV_S,
		RTCIO_CHANNEL_13_GPIO_NUM
	},
	{
		RTC_IO_TOUCH_PAD14_REG,
		RTC_IO_TOUCH_PAD14_MUX_SEL_M,
		RTC_IO_TOUCH_PAD14_FUN_SEL_S,
		RTC_IO_TOUCH_PAD14_FUN_IE_M,
		RTC_IO_TOUCH_PAD14_RUE_M,
		RTC_IO_TOUCH_PAD14_RDE_M,
		RTC_IO_TOUCH_PAD14_SLP_SEL_M,
		RTC_IO_TOUCH_PAD14_SLP_IE_M,
		RTC_IO_TOUCH_PAD14_SLP_OE_M,
		0,
		RTC_CNTL_TOUCH_PAD14_HOLD_M,
		RTC_IO_TOUCH_PAD14_DRV_V,
		RTC_IO_TOUCH_PAD14_DRV_S,
		RTCIO_CHANNEL_14_GPIO_NUM
	},
	{
		RTC_IO_XTAL_32P_PAD_REG,
		RTC_IO_X32P_MUX_SEL_M,
		RTC_IO_X32P_FUN_SEL_S,
		RTC_IO_X32P_FUN_IE_M,
		RTC_IO_X32P_RUE_M,
		RTC_IO_X32P_RDE_M,
		RTC_IO_X32P_SLP_SEL_M,
		RTC_IO_X32P_SLP_IE_M,
		RTC_IO_X32P_SLP_OE_M,
		0,
		RTC_CNTL_X32P_HOLD_M,
		RTC_IO_X32P_DRV_V,
		RTC_IO_X32P_DRV_S,
		RTCIO_CHANNEL_15_GPIO_NUM
	},
	{
		RTC_IO_XTAL_32N_PAD_REG,
		RTC_IO_X32N_MUX_SEL_M,
		RTC_IO_X32N_FUN_SEL_S,
		RTC_IO_X32N_FUN_IE_M,
		RTC_IO_X32N_RUE_M,
		RTC_IO_X32N_RDE_M,
		RTC_IO_X32N_SLP_SEL_M,
		RTC_IO_X32N_SLP_IE_M,
		RTC_IO_X32N_SLP_OE_M,
		0,
		RTC_CNTL_X32N_HOLD_M,
		RTC_IO_X32N_DRV_V,
		RTC_IO_X32N_DRV_S,
		RTCIO_CHANNEL_16_GPIO_NUM
	},
	{
		RTC_IO_PAD_DAC1_REG,
		RTC_IO_PDAC1_MUX_SEL_M,
		RTC_IO_PDAC1_FUN_SEL_S,
		RTC_IO_PDAC1_FUN_IE_M,
		RTC_IO_PDAC1_RUE_M,
		RTC_IO_PDAC1_RDE_M,
		RTC_IO_PDAC1_SLP_SEL_M,
		RTC_IO_PDAC1_SLP_IE_M,
		RTC_IO_PDAC1_SLP_OE_M,
		0,
		RTC_CNTL_PDAC1_HOLD_M,
		RTC_IO_PDAC1_DRV_V,
		RTC_IO_PDAC1_DRV_S,
		RTCIO_CHANNEL_17_GPIO_NUM
	},
	{
		RTC_IO_PAD_DAC2_REG,
		RTC_IO_PDAC2_MUX_SEL_M,
		RTC_IO_PDAC2_FUN_SEL_S,
		RTC_IO_PDAC2_FUN_IE_M,
		RTC_IO_PDAC2_RUE_M,
		RTC_IO_PDAC2_RDE_M,
		RTC_IO_PDAC2_SLP_SEL_M,
		RTC_IO_PDAC2_SLP_IE_M,
		RTC_IO_PDAC2_SLP_OE_M,
		0,
		RTC_CNTL_PDAC2_HOLD_M,
		RTC_IO_PDAC2_DRV_V,
		RTC_IO_PDAC2_DRV_S,
		RTCIO_CHANNEL_18_GPIO_NUM
	},
	{
		RTC_IO_RTC_PAD19_REG,
		RTC_IO_PAD19_MUX_SEL_M,
		RTC_IO_PAD19_FUN_SEL_S,
		RTC_IO_PAD19_FUN_IE_M,
		RTC_IO_PAD19_RUE_M,
		RTC_IO_PAD19_RDE_M,
		RTC_IO_PAD19_SLP_SEL_M,
		RTC_IO_PAD19_SLP_IE_M,
		RTC_IO_PAD19_SLP_OE_M,
		0,
		RTC_CNTL_PAD19_HOLD_M,
		RTC_IO_PAD19_DRV_V,
		RTC_IO_PAD19_DRV_S,
		RTCIO_CHANNEL_19_GPIO_NUM
	},
	{
		RTC_IO_RTC_PAD20_REG,
		RTC_IO_PAD20_MUX_SEL_M,
		RTC_IO_PAD20_FUN_SEL_S,
		RTC_IO_PAD20_FUN_IE_M,
		RTC_IO_PAD20_RUE_M,
		RTC_IO_PAD20_RDE_M,
		RTC_IO_PAD20_SLP_SEL_M,
		RTC_IO_PAD20_SLP_IE_M,
		RTC_IO_PAD20_SLP_OE_M,
		0,
		RTC_CNTL_PAD20_HOLD_M,
		RTC_IO_PAD20_DRV_V,
		RTC_IO_PAD20_DRV_S,
		RTCIO_CHANNEL_20_GPIO_NUM
	},
	{
		RTC_IO_RTC_PAD21_REG,
		RTC_IO_PAD21_MUX_SEL_M,
		RTC_IO_PAD21_FUN_SEL_S,
		RTC_IO_PAD21_FUN_IE_M,
		RTC_IO_PAD21_RUE_M,
		RTC_IO_PAD21_RDE_M,
		RTC_IO_PAD21_SLP_SEL_M,
		RTC_IO_PAD21_SLP_IE_M,
		RTC_IO_PAD21_SLP_OE_M,
		0,
		RTC_CNTL_PAD21_HOLD_M,
		RTC_IO_PAD21_DRV_V,
		RTC_IO_PAD21_DRV_S,
		RTCIO_CHANNEL_21_GPIO_NUM
	},
	//21
};

typedef volatile struct usb_serial_jtag_dev_s {
	union {
		struct {
			uint32_t rdwr_byte				   :	32;
		};
		uint32_t val;
	} ep1;
	union {
		struct {
			uint32_t wr_done				   :	1;
			uint32_t serial_in_ep_data_free	   :	1;
			uint32_t serial_out_ep_data_avail  :	1;
			uint32_t reserved3					   :	29;
		};
		uint32_t val;
	} ep1_conf;
	union {
		struct {
			uint32_t jtag_in_flush_int_raw	   :	1;
			uint32_t sof_int_raw			   :	1;
			uint32_t serial_out_recv_pkt_int_raw:	 1;
			uint32_t serial_in_empty_int_raw   :	1;
			uint32_t pid_err_int_raw		   :	1;
			uint32_t crc5_err_int_raw		   :	1;
			uint32_t crc16_err_int_raw		   :	1;
			uint32_t stuff_err_int_raw		   :	1;
			uint32_t in_token_rec_in_ep1_int_raw:	 1;
			uint32_t usb_bus_reset_int_raw	   :	1;
			uint32_t out_ep1_zero_payload_int_raw:	  1;
			uint32_t out_ep2_zero_payload_int_raw:	  1;
			uint32_t reserved12					   :	20;
		};
		uint32_t val;
	} int_raw;
	union {
		struct {
			uint32_t jtag_in_flush_int_st	   :	1;
			uint32_t sof_int_st				   :	1;
			uint32_t serial_out_recv_pkt_int_st:	1;
			uint32_t serial_in_empty_int_st	   :	1;
			uint32_t pid_err_int_st			   :	1;
			uint32_t crc5_err_int_st		   :	1;
			uint32_t crc16_err_int_st		   :	1;
			uint32_t stuff_err_int_st		   :	1;
			uint32_t in_token_rec_in_ep1_int_st:	1;
			uint32_t usb_bus_reset_int_st	   :	1;
			uint32_t out_ep1_zero_payload_int_st:	 1;
			uint32_t out_ep2_zero_payload_int_st:	 1;
			uint32_t reserved12					   :	20;
		};
		uint32_t val;
	} int_st;
	union {
		struct {
			uint32_t jtag_in_flush_int_ena	   :	1;
			uint32_t sof_int_ena			   :	1;
			uint32_t serial_out_recv_pkt_int_ena:	 1;
			uint32_t serial_in_empty_int_ena   :	1;
			uint32_t pid_err_int_ena		   :	1;
			uint32_t crc5_err_int_ena		   :	1;
			uint32_t crc16_err_int_ena		   :	1;
			uint32_t stuff_err_int_ena		   :	1;
			uint32_t in_token_rec_in_ep1_int_ena:	 1;
			uint32_t usb_bus_reset_int_ena	   :	1;
			uint32_t out_ep1_zero_payload_int_ena:	  1;
			uint32_t out_ep2_zero_payload_int_ena:	  1;
			uint32_t reserved12					   :	20;
		};
		uint32_t val;
	} int_ena;
	union {
		struct {
			uint32_t jtag_in_flush_int_clr	   :	1;
			uint32_t sof_int_clr			   :	1;
			uint32_t serial_out_recv_pkt_int_clr:	 1;
			uint32_t serial_in_empty_int_clr   :	1;
			uint32_t pid_err_int_clr		   :	1;
			uint32_t crc5_err_int_clr		   :	1;
			uint32_t crc16_err_int_clr		   :	1;
			uint32_t stuff_err_int_clr		   :	1;
			uint32_t in_token_rec_in_ep1_int_clr:	 1;
			uint32_t usb_bus_reset_int_clr	   :	1;
			uint32_t out_ep1_zero_payload_int_clr:	  1;
			uint32_t out_ep2_zero_payload_int_clr:	  1;
			uint32_t reserved12					   :	20;
		};
		uint32_t val;
	} int_clr;
	union {
		struct {
			uint32_t phy_sel				   :	1;
			uint32_t exchg_pins_override	   :	1;
			uint32_t exchg_pins				   :	1;
			uint32_t vrefh					   :	2;
			uint32_t vrefl					   :	2;
			uint32_t vref_override			   :	1;
			uint32_t pad_pull_override		   :	1;
			uint32_t dp_pullup				   :	1;
			uint32_t dp_pulldown			   :	1;
			uint32_t dm_pullup				   :	1;
			uint32_t dm_pulldown			   :	1;
			uint32_t pullup_value			   :	1;
			uint32_t usb_pad_enable			   :	1;
			uint32_t phy_tx_edge_sel		   :	1;
			uint32_t usb_jtag_bridge_en		   :	1;
			uint32_t reserved17					   :	15;
		};
		uint32_t val;
	} conf0;
	union {
		struct {
			uint32_t test_enable			   :	1;
			uint32_t test_usb_oe			   :	1;
			uint32_t test_tx_dp				   :	1;
			uint32_t test_tx_dm				   :	1;
			uint32_t test_rx_rcv			   :	1;
			uint32_t test_rx_dp				   :	1;
			uint32_t test_rx_dm				   :	1;
			uint32_t reserved7					   :	25;
		};
		uint32_t val;
	} test;
	union {
		struct {
			uint32_t in_fifo_cnt			   :	2;
			uint32_t in_fifo_empty			   :	1;
			uint32_t in_fifo_full			   :	1;
			uint32_t out_fifo_cnt			   :	2;
			uint32_t out_fifo_empty			   :	1;
			uint32_t out_fifo_full			   :	1;
			uint32_t in_fifo_reset			   :	1;
			uint32_t out_fifo_reset			   :	1;
			uint32_t reserved10					   :	22;
		};
		uint32_t val;
	} jfifo_st;
	union {
		struct {
			uint32_t sof_frame_index		   :	11;
			uint32_t reserved11					   :	21;
		};
		uint32_t val;
	} fram_num;
	union {
		struct {
			uint32_t in_ep0_state			   :	2;
			uint32_t in_ep0_wr_addr			   :	7;
			uint32_t in_ep0_rd_addr			   :	7;
			uint32_t reserved16					   :	16;
		};
		uint32_t val;
	} in_ep0_st;
	union {
		struct {
			uint32_t in_ep1_state			   :	2;
			uint32_t in_ep1_wr_addr			   :	7;
			uint32_t in_ep1_rd_addr			   :	7;
			uint32_t reserved16					   :	16;
		};
		uint32_t val;
	} in_ep1_st;
	union {
		struct {
			uint32_t in_ep2_state			   :	2;
			uint32_t in_ep2_wr_addr			   :	7;
			uint32_t in_ep2_rd_addr			   :	7;
			uint32_t reserved16					   :	16;
		};
		uint32_t val;
	} in_ep2_st;
	union {
		struct {
			uint32_t in_ep3_state			   :	2;
			uint32_t in_ep3_wr_addr			   :	7;
			uint32_t in_ep3_rd_addr			   :	7;
			uint32_t reserved16					   :	16;
		};
		uint32_t val;
	} in_ep3_st;
	union {
		struct {
			uint32_t out_ep0_state			   :	2;
			uint32_t out_ep0_wr_addr		   :	7;
			uint32_t out_ep0_rd_addr		   :	7;
			uint32_t reserved16					   :	16;
		};
		uint32_t val;
	} out_ep0_st;
	union {
		struct {
			uint32_t out_ep1_state			   :	2;
			uint32_t out_ep1_wr_addr		   :	7;
			uint32_t out_ep1_rd_addr		   :	7;
			uint32_t out_ep1_rec_data_cnt	   :	7;
			uint32_t reserved23					   :	9;
		};
		uint32_t val;
	} out_ep1_st;
	union {
		struct {
			uint32_t out_ep2_state			   :	2;
			uint32_t out_ep2_wr_addr		   :	7;
			uint32_t out_ep2_rd_addr		   :	7;
			uint32_t reserved16					   :	16;
		};
		uint32_t val;
	} out_ep2_st;
	union {
		struct {
			uint32_t clk_en					   :	1;
			uint32_t reserved1					   :	31;
		};
		uint32_t val;
	} misc_conf;
	union {
		struct {
			uint32_t usb_mem_pd				   :	1;
			uint32_t usb_mem_clk_en			   :	1;
			uint32_t reserved2					   :	30;
		};
		uint32_t val;
	} mem_conf;
	uint32_t reserved_4c;
	uint32_t reserved_50;
	uint32_t reserved_54;
	uint32_t reserved_58;
	uint32_t reserved_5c;
	uint32_t reserved_60;
	uint32_t reserved_64;
	uint32_t reserved_68;
	uint32_t reserved_6c;
	uint32_t reserved_70;
	uint32_t reserved_74;
	uint32_t reserved_78;
	uint32_t reserved_7c;
	uint32_t date;
} usb_serial_jtag_dev_t;

extern usb_serial_jtag_dev_t *USB_SERIAL_JTAG;

typedef volatile struct rtc_io_dev_s {
	union {
		struct {
			uint32_t reserved0:        10;
			uint32_t data:             22;              /*RTC GPIO 0 ~ 21 output data*/
		};
		uint32_t val;
	} out;
	union {
		struct {
			uint32_t reserved0:             10;
			uint32_t w1ts:                  22;         /*RTC GPIO 0 ~ 21 output data write 1 to set*/
		};
		uint32_t val;
	} out_w1ts;
	union {
		struct {
			uint32_t reserved0:             10;
			uint32_t w1tc:                  22;         /*RTC GPIO 0 ~ 21 output data write 1 to clear*/
		};
		uint32_t val;
	} out_w1tc;
	union {
		struct {
			uint32_t reserved0:      10;
			uint32_t enable:         22;                /*RTC GPIO 0 ~ 21 enable*/
		};
		uint32_t val;
	} enable;
	union {
		struct {
			uint32_t reserved0:           10;
			uint32_t w1ts:                22;           /*RTC GPIO 0 ~ 21 enable write 1 to set*/
		};
		uint32_t val;
	} enable_w1ts;
	union {
		struct {
			uint32_t reserved0:           10;
			uint32_t w1tc:                22;           /*RTC GPIO 0 ~ 21 enable write 1 to clear*/
		};
		uint32_t val;
	} enable_w1tc;
	union {
		struct {
			uint32_t reserved0:          10;
			uint32_t status:             22;            /*RTC GPIO 0 ~ 21 interrupt status*/
		};
		uint32_t val;
	} status;
	union {
		struct {
			uint32_t reserved0:               10;
			uint32_t w1ts:                    22;       /*RTC GPIO 0 ~ 21 interrupt status write 1 to set*/
		};
		uint32_t val;
	} status_w1ts;
	union {
		struct {
			uint32_t reserved0:               10;
			uint32_t w1tc:                    22;       /*RTC GPIO 0 ~ 21 interrupt status write 1 to clear*/
		};
		uint32_t val;
	} status_w1tc;
	union {
		struct {
			uint32_t reserved0:       10;
			uint32_t in:              22;               /*RTC GPIO input data*/
		};
		uint32_t val;
	} in_val;
	union {
		struct {
			uint32_t reserved0:                   2;
			uint32_t pad_driver:                  1;    /*if set to 0: normal output  if set to 1: open drain*/
			uint32_t reserved3:                   4;
			uint32_t int_type:                    3;    /*if set to 0: GPIO interrupt disable   if set to 1: rising edge trigger   if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger   if set to 5: high level trigger*/
			uint32_t wakeup_enable:               1;    /*RTC GPIO wakeup enable bit*/
			uint32_t reserved11:                 21;
		};
		uint32_t val;
	} pin[22];
	union {
		struct {
			uint32_t sel0:                    5;
			uint32_t sel1:                    5;
			uint32_t sel2:                    5;
			uint32_t sel3:                    5;
			uint32_t sel4:                    5;
			uint32_t no_gating_12m:           1;
			uint32_t reserved26:              6;
		};
		uint32_t val;
	} debug_sel;
	union {
		struct {
			uint32_t reserved0:         13;
			uint32_t fun_ie:             1;             /*input enable in work mode*/
			uint32_t slp_oe:             1;             /*output enable in sleep mode*/
			uint32_t slp_ie:             1;             /*input enable in sleep mode*/
			uint32_t slp_sel:            1;             /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t fun_sel:            2;             /*function sel*/
			uint32_t mux_sel:            1;             /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t xpd:                1;             /*TOUCH_XPD*/
			uint32_t tie_opt:            1;             /*TOUCH_TIE_OPT*/
			uint32_t start:              1;             /*TOUCH_START*/
			uint32_t dac:                3;             /*TOUCH_DAC*/
			uint32_t reserved26:         1;
			uint32_t rue:                1;             /*RUE*/
			uint32_t rde:                1;             /*RDE*/
			uint32_t drv:                2;             /*DRV*/
			uint32_t reserved31:         1;
		};
		uint32_t val;
	} touch_pad[15];
	union {
		struct {
			uint32_t reserved0:   13;
			uint32_t x32p_fun_ie:  1;                   /*input enable in work mode*/
			uint32_t x32p_slp_oe:  1;                   /*output enable in sleep mode*/
			uint32_t x32p_slp_ie:  1;                   /*input enable in sleep mode*/
			uint32_t x32p_slp_sel: 1;                   /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t x32p_fun_sel: 2;                   /*function sel*/
			uint32_t x32p_mux_sel: 1;                   /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t reserved20:   7;
			uint32_t x32p_rue:     1;                   /*RUE*/
			uint32_t x32p_rde:     1;                   /*RDE*/
			uint32_t x32p_drv:     2;                   /*DRV*/
			uint32_t reserved31:   1;
		};
		uint32_t val;
	} xtal_32p_pad;
	union {
		struct {
			uint32_t reserved0:   13;
			uint32_t x32n_fun_ie:  1;                   /*input enable in work mode*/
			uint32_t x32n_slp_oe:  1;                   /*output enable in sleep mode*/
			uint32_t x32n_slp_ie:  1;                   /*input enable in sleep mode*/
			uint32_t x32n_slp_sel: 1;                   /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t x32n_fun_sel: 2;                   /*function sel*/
			uint32_t x32n_mux_sel: 1;                   /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t reserved20:   7;
			uint32_t x32n_rue:     1;                   /*RUE*/
			uint32_t x32n_rde:     1;                   /*RDE*/
			uint32_t x32n_drv:     2;                   /*DRV*/
			uint32_t reserved31:   1;
		};
		uint32_t val;
	} xtal_32n_pad;
	union {
		struct {
			uint32_t reserved0:           3;
			uint32_t dac:                 8;            /*PDAC1_DAC*/
			uint32_t xpd_dac:             1;            /*PDAC1_XPD_DAC*/
			uint32_t dac_xpd_force:       1;            /*1: use reg_pdac1_xpd_dac to control PDAC1_XPD_DAC 0: use SAR ADC FSM to control PDAC1_XPD_DAC*/
			uint32_t fun_ie:              1;            /*input enable in work mode*/
			uint32_t slp_oe:              1;            /*output enable in sleep mode*/
			uint32_t slp_ie:              1;            /*input enable in sleep mode*/
			uint32_t slp_sel:             1;            /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t fun_sel:             2;            /*PDAC1 function sel*/
			uint32_t mux_sel:             1;            /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t reserved20:          7;
			uint32_t rue:                 1;            /*PDAC1_RUE*/
			uint32_t rde:                 1;            /*PDAC1_RDE*/
			uint32_t drv:                 2;            /*PDAC1_DRV*/
			uint32_t reserved31:          1;
		};
		uint32_t val;
	} pad_dac[2];
	union {
		struct {
			uint32_t reserved0:        13;
			uint32_t rtc_pad19_fun_ie:  1;              /*input enable in work mode*/
			uint32_t rtc_pad19_slp_oe:  1;              /*output enable in sleep mode*/
			uint32_t rtc_pad19_slp_ie:  1;              /*input enable in sleep mode*/
			uint32_t rtc_pad19_slp_sel: 1;              /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t rtc_pad19_fun_sel: 2;              /*function sel*/
			uint32_t rtc_pad19_mux_sel: 1;              /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t reserved20:        7;
			uint32_t rtc_pad19_rue:     1;              /*RUE*/
			uint32_t rtc_pad19_rde:     1;              /*RDE*/
			uint32_t rtc_pad19_drv:     2;              /*DRV*/
			uint32_t reserved31:        1;
		};
		uint32_t val;
	} rtc_pad19;
	union {
		struct {
			uint32_t reserved0:        13;
			uint32_t rtc_pad20_fun_ie:  1;              /*input enable in work mode*/
			uint32_t rtc_pad20_slp_oe:  1;              /*output enable in sleep mode*/
			uint32_t rtc_pad20_slp_ie:  1;              /*input enable in sleep mode*/
			uint32_t rtc_pad20_slp_sel: 1;              /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t rtc_pad20_fun_sel: 2;              /*function sel*/
			uint32_t rtc_pad20_mux_sel: 1;              /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t reserved20:        7;
			uint32_t rtc_pad20_rue:     1;              /*RUE*/
			uint32_t rtc_pad20_rde:     1;              /*RDE*/
			uint32_t rtc_pad20_drv:     2;              /*DRV*/
			uint32_t reserved31:        1;
		};
		uint32_t val;
	} rtc_pad20;
	union {
		struct {
			uint32_t reserved0:        13;
			uint32_t rtc_pad21_fun_ie:  1;              /*input enable in work mode*/
			uint32_t rtc_pad21_slp_oe:  1;              /*output enable in sleep mode*/
			uint32_t rtc_pad21_slp_ie:  1;              /*input enable in sleep mode*/
			uint32_t rtc_pad21_slp_sel: 1;              /*1: enable sleep mode during sleep 0: no sleep mode*/
			uint32_t rtc_pad21_fun_sel: 2;              /*function sel*/
			uint32_t rtc_pad21_mux_sel: 1;              /*1: use RTC GPIO 0: use digital GPIO*/
			uint32_t reserved20:        7;
			uint32_t rtc_pad21_rue:     1;              /*RUE*/
			uint32_t rtc_pad21_rde:     1;              /*RDE*/
			uint32_t rtc_pad21_drv:     2;              /*DRV*/
			uint32_t reserved31:        1;
		};
		uint32_t val;
	} rtc_pad21;
	union {
		struct {
			uint32_t reserved0:      27;
			uint32_t sel:             5;
		};
		uint32_t val;
	} ext_wakeup0;
	union {
		struct {
			uint32_t reserved0:      27;
			uint32_t sel:             5;                /*select RTC GPIO 0 ~ 17 to control XTAL*/
		};
		uint32_t val;
	} xtl_ext_ctr;
	union {
		struct {
			uint32_t reserved0:        23;
			uint32_t debug_bit_sel:     5;
			uint32_t scl_sel:           2;
			uint32_t sda_sel:           2;
		};
		uint32_t val;
	} sar_i2c_io;
	union {
		struct {
			uint32_t io_touch_bufsel:  4;               /*BUF_SEL when touch work without fsm*/
			uint32_t io_touch_bufmode: 1;               /*BUF_MODE when touch work without fsm*/
			uint32_t reserved5:       27;
		};
		uint32_t val;
	} touch_ctrl;
	uint32_t reserved_ec;
	uint32_t reserved_f0;
	uint32_t reserved_f4;
	uint32_t reserved_f8;
	uint32_t reserved_fc;
	uint32_t reserved_100;
	uint32_t reserved_104;
	uint32_t reserved_108;
	uint32_t reserved_10c;
	uint32_t reserved_110;
	uint32_t reserved_114;
	uint32_t reserved_118;
	uint32_t reserved_11c;
	uint32_t reserved_120;
	uint32_t reserved_124;
	uint32_t reserved_128;
	uint32_t reserved_12c;
	uint32_t reserved_130;
	uint32_t reserved_134;
	uint32_t reserved_138;
	uint32_t reserved_13c;
	uint32_t reserved_140;
	uint32_t reserved_144;
	uint32_t reserved_148;
	uint32_t reserved_14c;
	uint32_t reserved_150;
	uint32_t reserved_154;
	uint32_t reserved_158;
	uint32_t reserved_15c;
	uint32_t reserved_160;
	uint32_t reserved_164;
	uint32_t reserved_168;
	uint32_t reserved_16c;
	uint32_t reserved_170;
	uint32_t reserved_174;
	uint32_t reserved_178;
	uint32_t reserved_17c;
	uint32_t reserved_180;
	uint32_t reserved_184;
	uint32_t reserved_188;
	uint32_t reserved_18c;
	uint32_t reserved_190;
	uint32_t reserved_194;
	uint32_t reserved_198;
	uint32_t reserved_19c;
	uint32_t reserved_1a0;
	uint32_t reserved_1a4;
	uint32_t reserved_1a8;
	uint32_t reserved_1ac;
	uint32_t reserved_1b0;
	uint32_t reserved_1b4;
	uint32_t reserved_1b8;
	uint32_t reserved_1bc;
	uint32_t reserved_1c0;
	uint32_t reserved_1c4;
	uint32_t reserved_1c8;
	uint32_t reserved_1cc;
	uint32_t reserved_1d0;
	uint32_t reserved_1d4;
	uint32_t reserved_1d8;
	uint32_t reserved_1dc;
	uint32_t reserved_1e0;
	uint32_t reserved_1e4;
	uint32_t reserved_1e8;
	uint32_t reserved_1ec;
	uint32_t reserved_1f0;
	uint32_t reserved_1f4;
	uint32_t reserved_1f8;
	union {
		struct {
			uint32_t date:      28;
			uint32_t reserved28: 4;
		};
		uint32_t val;
	} date;
} rtc_io_dev_t;

extern rtc_io_dev_t *RTCIO;


