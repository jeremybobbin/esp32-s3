#define SOC_CLK_RC_FAST_FREQ_APPROX			17500000
#define SOC_CLK_RC_SLOW_FREQ_APPROX			136000
#define SOC_CLK_RC_FAST_D256_FREQ_APPROX	(SOC_CLK_RC_FAST_FREQ_APPROX / 256)
#define SOC_CLK_XTAL32K_FREQ_APPROX			32768

typedef enum {
	SOC_ROOT_CLK_INT_RC_FAST,
	SOC_ROOT_CLK_INT_RC_SLOW,
	SOC_ROOT_CLK_EXT_XTAL,
	SOC_ROOT_CLK_EXT_XTAL32K,
} soc_root_clk_t;

typedef enum {
	SOC_CPU_CLK_SRC_XTAL = 0,			  
	SOC_CPU_CLK_SRC_PLL = 1,
	SOC_CPU_CLK_SRC_RC_FAST = 2,
	SOC_CPU_CLK_SRC_INVALID,
} soc_cpu_clk_src_t;

typedef enum {
	SOC_RTC_SLOW_CLK_SRC_RC_SLOW = 0,
	SOC_RTC_SLOW_CLK_SRC_XTAL32K = 1,
	SOC_RTC_SLOW_CLK_SRC_RC_FAST_D256 = 2,
	SOC_RTC_SLOW_CLK_SRC_INVALID,
} soc_rtc_slow_clk_src_t;


typedef enum {
	SOC_RTC_FAST_CLK_SRC_XTAL_D2 = 0,
	SOC_RTC_FAST_CLK_SRC_XTAL_DIV = SOC_RTC_FAST_CLK_SRC_XTAL_D2,
	SOC_RTC_FAST_CLK_SRC_RC_FAST = 1,
	SOC_RTC_FAST_CLK_SRC_INVALID,
} soc_rtc_fast_clk_src_t;


typedef enum {
	SOC_XTAL_FREQ_32M = 32,
	SOC_XTAL_FREQ_40M = 40,
} soc_xtal_freq_t;

typedef enum {
	SOC_MOD_CLK_CPU = 1,
	SOC_MOD_CLK_RTC_FAST,
	SOC_MOD_CLK_RTC_SLOW,
	SOC_MOD_CLK_APB,
	SOC_MOD_CLK_PLL_F80M,
	SOC_MOD_CLK_PLL_F160M,
	SOC_MOD_CLK_PLL_D2,
	SOC_MOD_CLK_XTAL32K,
	SOC_MOD_CLK_RC_FAST,
	SOC_MOD_CLK_RC_FAST_D256,
	SOC_MOD_CLK_XTAL,
	SOC_MOD_CLK_TEMP_SENSOR,
	SOC_MOD_CLK_INVALID,
} soc_module_clk_t;

typedef enum {
	SYSTIMER_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
	SYSTIMER_CLK_SRC_DEFAULT = SOC_MOD_CLK_XTAL,
} soc_periph_systimer_clk_src_t;

#define SOC_GPTIMER_CLKS {SOC_MOD_CLK_APB, SOC_MOD_CLK_XTAL}

typedef enum {
	GPTIMER_CLK_SRC_APB = SOC_MOD_CLK_APB,
	GPTIMER_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
	GPTIMER_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_gptimer_clk_src_t;

typedef enum {
	TIMER_SRC_CLK_APB = SOC_MOD_CLK_APB,
	TIMER_SRC_CLK_XTAL = SOC_MOD_CLK_XTAL,
	TIMER_SRC_CLK_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_tg_clk_src_legacy_t;

#define SOC_LCD_CLKS {SOC_MOD_CLK_PLL_F160M, SOC_MOD_CLK_PLL_D2, SOC_MOD_CLK_XTAL}

typedef enum {
	LCD_CLK_SRC_PLL160M = SOC_MOD_CLK_PLL_F160M,
	LCD_CLK_SRC_PLL240M = SOC_MOD_CLK_PLL_D2,
	LCD_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
	LCD_CLK_SRC_DEFAULT = SOC_MOD_CLK_PLL_F160M,
} soc_periph_lcd_clk_src_t;


#define SOC_RMT_CLKS {SOC_MOD_CLK_APB, SOC_MOD_CLK_RC_FAST, SOC_MOD_CLK_XTAL}


typedef enum {
	RMT_CLK_SRC_APB = SOC_MOD_CLK_APB,
	RMT_CLK_SRC_RC_FAST = SOC_MOD_CLK_RC_FAST,
	RMT_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
	RMT_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_rmt_clk_src_t;


typedef enum {
	RMT_BASECLK_APB = SOC_MOD_CLK_APB,
	RMT_BASECLK_XTAL = SOC_MOD_CLK_XTAL,
	RMT_BASECLK_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_rmt_clk_src_legacy_t;


#define SOC_TEMP_SENSOR_CLKS {SOC_MOD_CLK_TEMP_SENSOR}


typedef enum {
	TEMPERATURE_SENSOR_CLK_SRC_RC_FAST = SOC_MOD_CLK_TEMP_SENSOR,
	TEMPERATURE_SENSOR_CLK_SRC_DEFAULT = SOC_MOD_CLK_TEMP_SENSOR,
} soc_periph_temperature_sensor_clk_src_t;


#define SOC_UART_CLKS {SOC_MOD_CLK_APB, SOC_MOD_CLK_XTAL, SOC_MOD_CLK_RC_FAST}


typedef enum {
	UART_SCLK_APB = SOC_MOD_CLK_APB,
	UART_SCLK_RTC = SOC_MOD_CLK_RC_FAST,
	UART_SCLK_XTAL = SOC_MOD_CLK_XTAL,
	UART_SCLK_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_uart_clk_src_legacy_t;


#define SOC_MCPWM_TIMER_CLKS {SOC_MOD_CLK_PLL_F160M}


typedef enum {
	MCPWM_TIMER_CLK_SRC_PLL160M = SOC_MOD_CLK_PLL_F160M,
	MCPWM_TIMER_CLK_SRC_DEFAULT = SOC_MOD_CLK_PLL_F160M,
} soc_periph_mcpwm_timer_clk_src_t;


#define SOC_MCPWM_CAPTURE_CLKS {SOC_MOD_CLK_APB}


typedef enum {
	MCPWM_CAPTURE_CLK_SRC_APB = SOC_MOD_CLK_APB,
	MCPWM_CAPTURE_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_mcpwm_capture_clk_src_t;


#define SOC_MCPWM_CARRIER_CLKS {SOC_MOD_CLK_PLL_F160M}


typedef enum {
	MCPWM_CARRIER_CLK_SRC_PLL160M = SOC_MOD_CLK_PLL_F160M,
	MCPWM_CARRIER_CLK_SRC_DEFAULT = SOC_MOD_CLK_PLL_F160M,
} soc_periph_mcpwm_carrier_clk_src_t;


#define SOC_I2S_CLKS {SOC_MOD_CLK_PLL_F160M, SOC_MOD_CLK_XTAL, I2S_CLK_SRC_EXTERNAL}


typedef enum {
	I2S_CLK_SRC_DEFAULT = SOC_MOD_CLK_PLL_F160M,
	I2S_CLK_SRC_PLL_160M = SOC_MOD_CLK_PLL_F160M,
	I2S_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
	I2S_CLK_SRC_EXTERNAL = -1,
} soc_periph_i2s_clk_src_t;


#define SOC_I2C_CLKS {SOC_MOD_CLK_XTAL, SOC_MOD_CLK_RC_FAST}


typedef enum {
	I2C_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
	I2C_CLK_SRC_RC_FAST = SOC_MOD_CLK_RC_FAST,
	I2C_CLK_SRC_DEFAULT = SOC_MOD_CLK_XTAL,
} soc_periph_i2c_clk_src_t;


#define SOC_SPI_CLKS {SOC_MOD_CLK_APB, SOC_MOD_CLK_XTAL}


typedef enum {
	SPI_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
	SPI_CLK_SRC_APB = SOC_MOD_CLK_APB,
	SPI_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
} soc_periph_spi_clk_src_t;


#define SOC_SDM_CLKS {SOC_MOD_CLK_APB}


typedef enum {
	SDM_CLK_SRC_APB = SOC_MOD_CLK_APB,
	SDM_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_sdm_clk_src_t;


#define SOC_GLITCH_FILTER_CLKS {SOC_MOD_CLK_APB}



typedef enum {
	GLITCH_FILTER_CLK_SRC_APB = SOC_MOD_CLK_APB,
	GLITCH_FILTER_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_glitch_filter_clk_src_t;


#define SOC_TWAI_CLKS {SOC_MOD_CLK_APB}


typedef enum {
	TWAI_CLK_SRC_APB = SOC_MOD_CLK_APB,
	TWAI_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_twai_clk_src_t;


#define SOC_ADC_DIGI_CLKS {SOC_MOD_CLK_APB, SOC_MOD_CLK_PLL_D2}


typedef enum {
	ADC_DIGI_CLK_SRC_APB = SOC_MOD_CLK_APB,
	ADC_DIGI_CLK_SRC_PLL_F240M = SOC_MOD_CLK_PLL_D2,
	ADC_DIGI_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_adc_digi_clk_src_t;


#define SOC_ADC_RTC_CLKS {SOC_MOD_CLK_RC_FAST}


typedef enum {
	ADC_RTC_CLK_SRC_RC_FAST = SOC_MOD_CLK_RC_FAST,
	ADC_RTC_CLK_SRC_DEFAULT = SOC_MOD_CLK_RC_FAST,
} soc_periph_adc_rtc_clk_src_t;


#define SOC_MWDT_CLKS {SOC_MOD_CLK_APB}


typedef enum {
	MWDT_CLK_SRC_APB = SOC_MOD_CLK_APB,
	MWDT_CLK_SRC_DEFAULT = SOC_MOD_CLK_APB,
} soc_periph_mwdt_clk_src_t;


#define SOC_LEDC_CLKS {SOC_MOD_CLK_XTAL, SOC_MOD_CLK_APB, SOC_MOD_CLK_RC_FAST}


typedef enum {
	LEDC_AUTO_CLK = 0,
	LEDC_USE_APB_CLK = SOC_MOD_CLK_APB,
	LEDC_USE_RC_FAST_CLK = SOC_MOD_CLK_RC_FAST,
	LEDC_USE_XTAL_CLK = SOC_MOD_CLK_XTAL,
	LEDC_USE_RTC8M_CLK __attribute__((deprecated("please use 'LEDC_USE_RC_FAST_CLK' instead"))) = LEDC_USE_RC_FAST_CLK,
} soc_periph_ledc_clk_src_legacy_t;


#define SOC_SDMMC_CLKS {SOC_MOD_CLK_PLL_F160M, SOC_MOD_CLK_XTAL}


typedef enum {
	SDMMC_CLK_SRC_DEFAULT = SOC_MOD_CLK_PLL_F160M,
	SDMMC_CLK_SRC_PLL160M = SOC_MOD_CLK_PLL_F160M,
	SDMMC_CLK_SRC_XTAL = SOC_MOD_CLK_XTAL,
} soc_periph_sdmmc_clk_src_t;

typedef enum {
	CLKOUT_SIG_PLL      = 1,
	CLKOUT_SIG_RC_SLOW  = 4,
	CLKOUT_SIG_XTAL     = 5,
	CLKOUT_SIG_PLL_F80M = 13,
	CLKOUT_SIG_RC_FAST  = 14,
	CLKOUT_SIG_INVALID  = 0xFF,
} soc_clkout_sig_id_t;
